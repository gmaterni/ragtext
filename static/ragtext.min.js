const DocumentType$$module$static$js$llm_instructions={NORMATIVI:"normativi",PROCEDURALI:"procedurali",DOCUMENTALI:"documentali",INFORMATIVI:"informativi",NARRATIVI:"narrativi",ARGOMENTATIVI:"argomentativi",ANALITICI:"analitici",PROGETTUALI:"progettuali"},STRING_TO_DOC_TYPE$$module$static$js$llm_instructions={};Object.values(DocumentType$$module$static$js$llm_instructions).forEach(a=>{STRING_TO_DOC_TYPE$$module$static$js$llm_instructions[a]=a});
const EXTRACTION_CRITERIA$$module$static$js$llm_instructions={[DocumentType$$module$static$js$llm_instructions.NORMATIVI]:{description:"Documenti con valore vincolante che prescrivono comportamenti obbligatori",focus:"Massima precisione terminologica - ogni parola pu\u00f2 avere valore legale",examples:["regolamento aziendale","contratto commerciale","polizza assicurativa","normativa tecnica","specifiche API"],instructions:["Identifica chi ha poteri specifici e cosa pu\u00f2 o deve fare secondo il documento",
"Estrai ogni obbligo specificando chi deve fare cosa in quali condizioni precise","Registra parametri numerici critici mantenendo valori e unit\u00e0 di misura esatti","Collega ogni violazione alla sua conseguenza specifica dichiarata nel testo"]},[DocumentType$$module$static$js$llm_instructions.PROCEDURALI]:{description:"Documenti che guidano all'esecuzione corretta di attivit\u00e0 specifiche",focus:"Sequenza operativa precisa - alterazioni compromettono il risultato",examples:["manuale operativo",
"istruzioni assemblaggio","protocollo medico","recipe","guida installazione"],instructions:["Estrai la sequenza di azioni nell'ordine corretto con tutti i parametri operativi","Identifica dove e come verificare che il processo stia funzionando correttamente","Registra cosa fare quando qualcosa va storto o non funziona come previsto"]},[DocumentType$$module$static$js$llm_instructions.DOCUMENTALI]:{description:"Documenti che registrano fatti accaduti per consultazione e tracciabilit\u00e0",focus:"Accuratezza fattuale - distinguere chiaramente fatti da interpretazioni",
examples:["verbale riunione","report incidente","cartella clinica","audit report","log eventi"],instructions:["Ordina gli eventi cronologicamente con date, orari e partecipanti identificati","Registra misurazioni e dati quantitativi esatti specificando fonte e contesto di rilevazione","Documenta chi ha preso quali decisioni, quando e per quali motivi dichiarati"]},[DocumentType$$module$static$js$llm_instructions.INFORMATIVI]:{description:"Documenti che trasmettono informazioni su situazioni ed eventi",
focus:"Distinzione netta tra fatti riportati e interpretazioni dell'autore",examples:["articolo giornalistico","report di mercato","documento informativo","comunicato stampa"],instructions:["Estrai fatti verificabili (chi-cosa-dove-quando) indicando il livello di certezza","Registra collegamenti causa-effetto solo quando presentati come relazioni certe","Identifica le fonti delle informazioni e segnala eventuali limitazioni o bias"]},[DocumentType$$module$static$js$llm_instructions.NARRATIVI]:{description:"Documenti che raccontano storie ed esperienze attraverso strutture narrative",
focus:"Struttura narrativa e sviluppo dei personaggi nel loro arco evolutivo",examples:["racconto","biografia","caso studio narrativo","cronaca storica","testimonianza"],instructions:["Identifica la situazione iniziale, lo sviluppo dei conflitti e come si risolve","Estrai i personaggi principali e come cambiano durante la storia","Registra gli eventi che fanno progredire o cambiare direzione alla narrazione"]},[DocumentType$$module$static$js$llm_instructions.ARGOMENTATIVI]:{description:"Documenti che sostengono tesi attraverso ragionamenti strutturati",
focus:"Catena logica dell'argomentazione e qualit\u00e0 delle evidenze",examples:["saggio accademico","documento posizione","proposta progetto","analisi critica"],instructions:["Identifica la tesi principale che l'autore vuole dimostrare o sostenere","Estrai le prove concrete utilizzate: dati, esempi, citazioni, ragionamenti","Registra le obiezioni che l'autore considera e come tenta di confutarle"]},[DocumentType$$module$static$js$llm_instructions.ANALITICI]:{description:"Documenti che interpretano dati per identificare pattern e trarre conclusioni",
focus:"Metodologia utilizzata e solidit\u00e0 delle inferenze dai dati",examples:["studio di mercato","analisi performance","valutazione tecnica","ricerca empirica"],instructions:["Definisci cosa viene analizzato, con quali dati e in quale periodo temporale","Estrai i pattern principali e le correlazioni significative identificate","Registra le conclusioni dell'autore specificando il livello di confidenza espresso"]},[DocumentType$$module$static$js$llm_instructions.PROGETTUALI]:{description:"Documenti che definiscono obiettivi futuri e modalit\u00e0 per raggiungerli",
focus:"Obiettivi concreti, risorse necessarie e gestione dei rischi",examples:["piano progetto","proposta tecnica","business plan","strategia implementazione"],instructions:["Estrai gli obiettivi specifici con scadenze e criteri misurabili di successo","Identifica chi deve fare cosa, con quali risorse e competenze necessarie","Registra i rischi principali e le contromisure previste per mitigarli"]}};
function getInstructions$$module$static$js$llm_instructions(a){return getDocumentInfo$$module$static$js$llm_instructions(a).instructions.join("\n")}function getDescription$$module$static$js$llm_instructions(a){return getDocumentInfo$$module$static$js$llm_instructions(a).description}function getFocus$$module$static$js$llm_instructions(a){return getDocumentInfo$$module$static$js$llm_instructions(a).focus}
function getDocumentInfo$$module$static$js$llm_instructions(a){if("string"===typeof a){if(!(a in STRING_TO_DOC_TYPE$$module$static$js$llm_instructions))throw Error(`Tipo documento non supportato: ${a}`);a=STRING_TO_DOC_TYPE$$module$static$js$llm_instructions[a]}return EXTRACTION_CRITERIA$$module$static$js$llm_instructions[a]}function listTypes$$module$static$js$llm_instructions(){return Object.keys(STRING_TO_DOC_TYPE$$module$static$js$llm_instructions)}
function listExamples$$module$static$js$llm_instructions(){const a=[];for(const [b,c]of Object.entries(EXTRACTION_CRITERIA$$module$static$js$llm_instructions)){const d=c.examples||[];for(const e of d)a.push(`${e.padEnd(30)} :  ${b}`)}return a.sort().join("\n")}function listTypeExample$$module$static$js$llm_instructions(){const a=[];for(const [b,c]of Object.entries(EXTRACTION_CRITERIA$$module$static$js$llm_instructions))a.push(b,c.examples||[]);return a}
var module$static$js$llm_instructions={DocumentType:DocumentType$$module$static$js$llm_instructions,EXTRACTION_CRITERIA:EXTRACTION_CRITERIA$$module$static$js$llm_instructions,STRING_TO_DOC_TYPE:STRING_TO_DOC_TYPE$$module$static$js$llm_instructions};module$static$js$llm_instructions.getDescription=getDescription$$module$static$js$llm_instructions;module$static$js$llm_instructions.getDocumentInfo=getDocumentInfo$$module$static$js$llm_instructions;module$static$js$llm_instructions.getFocus=getFocus$$module$static$js$llm_instructions;
module$static$js$llm_instructions.getInstructions=getInstructions$$module$static$js$llm_instructions;module$static$js$llm_instructions.listExamples=listExamples$$module$static$js$llm_instructions;module$static$js$llm_instructions.listTypeExample=listTypeExample$$module$static$js$llm_instructions;module$static$js$llm_instructions.listTypes=listTypes$$module$static$js$llm_instructions;const OUTPUT_TEMPLATES$$module$static$js$llm_templates={[DocumentType$$module$static$js$llm_instructions.NORMATIVI]:"SOGGETTI:\nnome: ruolo_funzione | ambito_applicazione | poteri_specifici | status_attivo\nREGOLE:\nregola_id: descrizione_completa | condizioni_applicazione | conseguenze_obbligatorie | eccezioni_se_presenti\nDEFINIZIONI:\ntermine: significato_nel_contesto | campo_validit\u00e0 | priorit\u00e0_gerarchica | riferimenti_normativi\nPARAMETRI_QUANTITATIVI:\nnome_parametro: valore_dichiarato | unit\u00e0_misura | tolleranze_se_specificate | criticit\u00e0_operativa\nSANZIONI_VIOLAZIONI:\ntipo_violazione: descrizione_comportamento | conseguenza_prevista | gravit\u00e0_relativa | procedure_ricorso\nGERARCHIA_NORMATIVA:\nnorma_citata: relazione_con_presente_documento | tipo_precedenza | condizioni_prevalenza",
[DocumentType$$module$static$js$llm_instructions.PROCEDURALI]:"OBIETTIVO_PROCEDURA:\nnome: risultato_atteso | prerequisiti_necessari | output_finale | criticit\u00e0_operativa\nSEQUENZA_AZIONI:\npasso_N: descrizione_azione | parametri_operativi | controlli_qualit\u00e0 | punti_attenzione\nPUNTI_DECISIONE:\nsituazione: opzione_A\u2192conseguenze | opzione_B\u2192conseguenze | criteri_scelta | raccomandazioni\nRISORSE_NECESSARIE:\nelemento: tipo_risorsa | specifiche_tecniche | obbligatoriet\u00e0 | alternative_possibili\nRISCHI_OPERATIVI:\nscenario_critico: cause_scatenanti | conseguenze_potenziali | azioni_prevenzione | gravit\u00e0_stimata\nCONTROLLI_QUALIT\u00c0:\ncheckpoint: cosa_verificare | standard_accettazione | azioni_se_non_conforme",
[DocumentType$$module$static$js$llm_instructions.DOCUMENTALI]:"CRONOLOGIA_EVENTI:\nmomento: descrizione_evento | partecipanti_coinvolti | risultati_ottenuti | documentazione_associata\nENTIT\u00c0_TRACCIATE:\nnome_entit\u00e0: categoria_appartenenza | stato_iniziale | stato_finale | cause_trasformazione\nMISURAZIONI_RILEVATE:\nparametro: valore_registrato | unit\u00e0_misura | metodo_rilevazione | affidabilit\u00e0_dato | anomalie_riscontrate\nDECISIONI_PRESE:\ndecisione: responsabili_decisione | momento_temporale | motivazioni_dichiarate | impatti_previsti\nRELAZIONI_IDENTIFICATE:\nentit\u00e0_A__entit\u00e0_B: natura_relazione | intensit\u00e0_collegamento | durata_temporale | evidenze_supporto",
[DocumentType$$module$static$js$llm_instructions.INFORMATIVI]:"FATTI_PRINCIPALI:\nfatto: descrizione_oggettiva | fonte_informazione | livello_certezza | contesto_rilevante\nATTORI_COINVOLTI:\nnome_attore: ruolo_nella_situazione | azioni_compiute | caratteristiche_rilevanti | impatto_generato\nCONTESTO_SITUAZIONE:\ndimensione_spaziale: luogo_specifico | dimensione_temporale | condizioni_ambientali | background_necessario\nRELAZIONI_CAUSALI:\ncausa_identificata: meccanismo_collegamento | effetto_osservato | evidenze_disponibili | alternative_possibili\nIMPATTI_CONSEGUENZE:\ncategoria_interessata: tipo_effetto | durata_stimata | intensit\u00e0_impatto | misurabilit\u00e0\nFONTI_INFORMAZIONE:\norigine: tipologia_fonte | affidabilit\u00e0_stimata | possibili_bias | data_pubblicazione",
[DocumentType$$module$static$js$llm_instructions.NARRATIVI]:"STRUTTURA_NARRATIVA:\nsetup_iniziale: situazione_partenza | personaggi_introdotti | tema_centrale | ambientazione\nsviluppo: elementi_complicanti | escalation_tensione | conflitti_emergenti\nclimax: momento_culminante | decisione_cruciale | punto_svolta\nrisoluzione: modalit\u00e0_conclusione | nuovo_equilibrio | significato_emergente\nPERSONAGGI:\nnome_personaggio: funzione_narrativa | motivazione_principale | evoluzione_carattere | simbolismo_eventuale\nEVENTI_SIGNIFICATIVI:\nevento: funzione_nella_trama | personaggi_coinvolti | significato_letterale | significato_simbolico\nTEMI_RICORRENTI:\ntema_simbolo: prima_apparizione | sviluppo_progressivo | risoluzione_finale | significato_complessivo",
[DocumentType$$module$static$js$llm_instructions.ARGOMENTATIVI]:"TESI_CENTRALE:\naffermazione_principale: posizione_autore | novit\u00e0_contributo | campo_disciplinare | portata_affermazione\nCATENA_ARGOMENTATIVA:\nargomento_N: premesse_dichiarate | inferenza_logica | conclusione_raggiunta | tipo_ragionamento | solidit\u00e0_stimata\nEVIDENZE_SUPPORTO:\nevidenza: contenuto_specifico | fonte_origine | peso_argomentativo | tipo_evidenza | limiti_riconosciuti\nOBIEZIONI_CONFUTAZIONI:\nobiezione: contenuto_critica | fonte_obiezione | risposta_autore | efficacia_confutazione\nSTRUTTURA_LOGICA:\ntipo_argomentazione: coerenza_interna | completezza_trattazione | validit\u00e0_formale | punti_deboli",
[DocumentType$$module$static$js$llm_instructions.ANALITICI]:"OGGETTO_STUDIO:\ntarget_analisi: definizione_ambito | periodo_considerato | limitazioni_scope | granularit\u00e0_analisi\nMETODOLOGIA_APPLICATA:\napproccio_usato: tecniche_specifiche | strumenti_utilizzati | dati_base | assunzioni_metodologiche\nPATTERN_IDENTIFICATI:\npattern: descrizione_regolarit\u00e0 | frequenza_osservata | robustezza_pattern | possibili_spiegazioni\nCORRELAZIONI_RILEVATE:\nvariabile_A__variabile_B: tipo_relazione | intensit\u00e0_apparente | direzione_causale_ipotizzata | significativit\u00e0_apparente\nCONCLUSIONI_RAGGIUNTE:\nconclusione: inferenza_principale | livello_confidenza | limiti_generalizzazione | raccomandazioni_pratiche\nLIMITAZIONI_RICONOSCIUTE:\nlimite: tipo_limitazione | impatto_su_risultati | tentativi_mitigazione | importanza_relativa",
[DocumentType$$module$static$js$llm_instructions.PROGETTUALI]:"OBIETTIVI_PROGETTO:\nobiettivo: descrizione_traguardo | metriche_successo | timeline_prevista | priorit\u00e0_relativa | responsabile_assegnato\nSTRATEGIE_IMPLEMENTAZIONE:\nstrategia: approccio_metodologico | obiettivi_serviti | risorse_richieste | indicatori_progresso\nROADMAP_TEMPORALE:\nmilestone: deliverable_atteso | data_target | prerequisiti_necessari | criteri_accettazione\nRISORSE_RICHIESTE:\nrisorsa: tipologia | quantit\u00e0_stimata | costo_previsto | disponibilit\u00e0_temporale | criticit\u00e0_progetto\nRISCHI_IDENTIFICATI:\nrischio: descrizione_minaccia | probabilit\u00e0_stimata | impatto_potenziale | misure_mitigazione | responsabile_gestione\nASSUNZIONI_CRITICHE:\nassunzione: ipotesi_sottostante | probabilit\u00e0_validit\u00e0 | impatto_se_falsa | modalit\u00e0_verifica | piano_contingenza"};
function getTemplate$$module$static$js$llm_templates(a){if("string"===typeof a){if(!(a in STRING_TO_DOC_TYPE$$module$static$js$llm_instructions))throw Error(`Tipo documento non supportato: ${a}`);a=STRING_TO_DOC_TYPE$$module$static$js$llm_instructions[a]}if(!(a in OUTPUT_TEMPLATES$$module$static$js$llm_templates))throw Error(`Tipo documento non supportato: ${a}`);return OUTPUT_TEMPLATES$$module$static$js$llm_templates[a]}var module$static$js$llm_templates={OUTPUT_TEMPLATES:OUTPUT_TEMPLATES$$module$static$js$llm_templates};
module$static$js$llm_templates.getTemplate=getTemplate$$module$static$js$llm_templates;const SYSTEM$$module$static$js$prompts="system",USER$$module$static$js$prompts="user",ASSISTANT$$module$static$js$prompts="assistant",assembler$$module$static$js$prompts={messages:[],setSystemMessage(a){this.messages=this.messages.filter(b=>b.role!==SYSTEM$$module$static$js$prompts);this.messages.unshift({role:SYSTEM$$module$static$js$prompts,content:a});return this},addUserMessage(a){this.messages.push({role:USER$$module$static$js$prompts,content:a});return this},addAssistantMessage(a){this.messages.push({role:ASSISTANT$$module$static$js$prompts,
content:a});return this},getMessages(){const a=[...this.messages];for(let b=0;b<a.length;b++)a[b].content=a[b].content.replace(/^(\S+):\s*/g,"");return a},clear(){this.messages=[];return this}},promptBuilder$$module$static$js$prompts={extractionPrompt:(a,b)=>{const c=getInstructions$$module$static$js$llm_instructions(b),d=getDescription$$module$static$js$llm_instructions(b),e=getFocus$$module$static$js$llm_instructions(b);b=getTemplate$$module$static$js$llm_templates(b);a=`
## Documento da analizzare
\`\`\`text
${a}
\`\`\`
---
Estrai le informazioni dal documento seguendo le istruzioni e produci la risposta in base al formato risposta.
`;assembler$$module$static$js$prompts.messages=[];assembler$$module$static$js$prompts.setSystemMessage(`
## Obiettivo
Estrai informazioni strutturate dal documento fornito.
## Contesto del compito
Stai analizzando ${d}
## Principio guida
Durante l'estrazione, la tua priorit\u00e0 assoluta \u00e8: "${e}".
## Istruzioni
${c}
## Formato risposta
${b}
## Note
Salta i campi non presenti nel documento.
`);assembler$$module$static$js$prompts.addUserMessage(a);return assembler$$module$static$js$prompts.getMessages()},unificationPrompt:(a,b)=>{b=getTemplate$$module$static$js$llm_templates(b);a=`
## Informazioni da unificare
\`\`\`text
${a}
\`\`\`
Produci una knowledge base consolidata seguendo il formato risposta.
`;assembler$$module$static$js$prompts.messages=[];assembler$$module$static$js$prompts.setSystemMessage(`
## Obiettivo
Unifica i documenti strutturati in un'unica knowledge base.
## Istruzioni
1. Analizza i documenti strutturati forniti
2. Identifica argomenti comuni e correlazioni tra le informazioni
3. Consolida le informazioni eliminando duplicati
4. Unifica le relazioni causali e sequenziali
## Formato risposta
${b}
`);assembler$$module$static$js$prompts.addUserMessage(a);return assembler$$module$static$js$prompts.getMessages()},extractorPrompt:(a,b,c)=>{c=getTemplate$$module$static$js$llm_templates(c);a=`
## Knowledge base completa
\`\`\`text
${a}
\`\`\`
## Domanda
${b}
---
Estrai le sezioni rilevanti per questa domanda e rispetta il formato risposta.
`;assembler$$module$static$js$prompts.messages=[];assembler$$module$static$js$prompts.setSystemMessage(`
## Obiettivo
Seleziona dalla knowledge base le informazioni che aiutano a rispondere alla domanda.
## Criteri di selezione
- Includi informazioni collegate alla domanda
- Includi contesto necessario per capire le informazioni selezionate
## Formato risposta
${c}
`);assembler$$module$static$js$prompts.addUserMessage(a);return assembler$$module$static$js$prompts.getMessages()},answerPrompt:(a,b)=>{const c=`
## Domanda
${b[0]}
`;assembler$$module$static$js$prompts.messages=[];assembler$$module$static$js$prompts.setSystemMessage(`
Sei un assistente esperto che risponde in modo chiaro e naturale.
## Regole
- La tua fonte di verit\u00e0 principale \u00e8 il CONTESTO strutturato fornito
- Usa la cronologia della conversazione per comprendere il filo logico
- Se usi conoscenza generale, segnala chiaramente: "Nel contesto non ho trovato questa informazione, ma posso dirti che..."
- Mantieni un tono conversazionale e naturale
- Rispondi in modo completo ma conciso
## Formato risposta
- Rispondi ESCLUSIVAMENTE in testo piano senza alcun artificio grafico
- Scrivi in paragrafi fluidi e naturali come in una conversazione
- Se devi elencare elementi, scrivili in forma discorsiva nel testo
## Contesto
\`\`\`text
${a}
\`\`\`
## Istruzioni
- Cerca prima la risposta nel CONTESTO
- Utilizza le informazioni delle sezioni strutturate disponibili
- Se la risposta non \u00e8 presente nel contesto, usa la conoscenza generale segnalando chiaramente
- Considera la cronologia delle domande per fornire risposte coerenti
- Formula una risposta chiara, concisa e naturale
`);assembler$$module$static$js$prompts.addUserMessage(c);for(a=1;a<b.length;a++)0===(a-1)%2?assembler$$module$static$js$prompts.addAssistantMessage(b[a]):assembler$$module$static$js$prompts.addUserMessage(b[a]);return assembler$$module$static$js$prompts.getMessages()}};var module$static$js$prompts={DocumentType:DocumentType$$module$static$js$llm_instructions};module$static$js$prompts.listExamples=listExamples$$module$static$js$llm_instructions;module$static$js$prompts.listTypeExample=listTypeExample$$module$static$js$llm_instructions;
module$static$js$prompts.listTypes=listTypes$$module$static$js$llm_instructions;module$static$js$prompts.promptBuilder=promptBuilder$$module$static$js$prompts;const removeTag$$module$static$js$text_cleaner=a=>a.replace(/<<<|>>>|<<|>>|#/g,""),removeLinks$$module$static$js$text_cleaner=a=>a.replace(/https?:\/\/\S+|file:\/\/\/[^\s]+|\[([^\]]+)\]\([^)]+\)|<a\s+(?:[^>]*?\s+)?href="[^"]*"[^>]*>([^<]+)<\/a>/g,"").trim(),cleanText$$module$static$js$text_cleaner=a=>{a=a.replace(/`/g,"");a=a.replace(/(\w+)-\s*\n(\w+)/g,"$1$2");a=a.replace(/[\u00AD\u200B\u200C\u200D\u2060\uFEFF\u0008]/g,"");a=a.replace(/[\u00A0\u2000-\u200A\u202F\u205F\u3000\t\r\f\v]/g," ");a=a.replace(/\\([nrtfb])/g,
"$1");a=a.replace(/\\(u[0-9a-fA-F]{4}|x[0-9a-fA-F]{2})/g,"$1");a=a.replace(/\\([a-zA-Z]:\\|\\\\[a-zA-Z0-9_]+\\)/g,"\\$1");a=a.replace(/\\/g,"");a=a.replace(/(.)\1{3,}/g,"");a=a.replace(/[\u201c\u201d]/g,'"');a=a.replace(/[\u2019\u2018\u201a\u201b]/g,"'");a=a.replace(/ +([.,;:!?])/g,"$1");a=a.replace(/\s+/g," ");a=a.normalize("NFC");return a.trim()};
function cleanDoc$$module$static$js$text_cleaner(a){a=removeTag$$module$static$js$text_cleaner(a);a=removeLinks$$module$static$js$text_cleaner(a);a=cleanText$$module$static$js$text_cleaner(a);a=a.split(/(?<!\b\w\.)(?<!\b\w\w\.)(?<!\b\w\w\w\.)(?<=[.!?])(?=\s+[A-Z])/);a=a.map(b=>b.trim()).filter(b=>0<b.length);return a.join("\n")}var module$static$js$text_cleaner={};module$static$js$text_cleaner.cleanDoc=cleanDoc$$module$static$js$text_cleaner;const nodrag_tds$$module$static$js$services$uadrag=["input","select","a"],nodrag_cls$$module$static$js$services$uadrag="nodrag";
var UaDrag$$module$static$js$services$uadrag=function(a){return function(b){let c=0,d=0,e=0,f=0;const g=function(h){h=h||window.event;h.preventDefault();c=e-h.clientX;d=f-h.clientY;e=h.clientX;f=h.clientY;b.style.top=b.offsetTop-d+"px";b.style.left=b.offsetLeft-c+"px"},k=function(){document.onmouseup=null;document.onmousemove=null};b.onmousedown=function(h){h=h||window.event;let m=h.target;!(m=m||null)||nodrag_tds$$module$static$js$services$uadrag.includes(m.tagName.toLowerCase())||m.classList.contains(nodrag_cls$$module$static$js$services$uadrag)||
(h.preventDefault(),e=h.clientX,f=h.clientY,document.onmouseup=k,document.onmousemove=g)}}(a)},module$static$js$services$uadrag={};module$static$js$services$uadrag.UaDrag=UaDrag$$module$static$js$services$uadrag;var UaWindowAdm$$module$static$js$services$uawindow={ws:{},create(a,b=null){let c=document.getElementById(a);c||(c=document.createElement("div"),b?document.getElementById(b).appendChild(c):document.body.appendChild(c),c.id=a,c.setAttribute("data-name","ua-window"),b=this.newUaWindow(c),this.ws[a]=b);a=this.ws[a];c.style.display="none";return a},get(a){return this.ws[a]?this.ws[a]:null},show(a){this.ws[a]&&this.ws[a].show()},close(a){this.ws[a]&&this.ws[a].close()},toggle(a){this.ws[a]&&this.ws[a].toggle()},
hide(a){this.ws[a]&&this.ws[a].hide()},closeThis(a){a=a.closest('[data-name="ua-window"]').id;this.ws[a].close()},showAll(){for(let a in this.ws)this.ws[a].show()},hideAll(){for(let a in this.ws)this.ws[a].hide()},closeAll(){for(let a in this.ws)this.ws[a].close()},remove(a){this.ws[a]&&(document.getElementById(a).remove(),this.ws[a]=null,delete this.ws[a])},removeAll(){for(let a in this.ws)this.remove(a);this.ws={}},newUaWindow(a){let b={initialize(c){this.w=c;this.wy=this.wx="0px";this.isVisible=
this.isOpen=!1;this.firstShow=!0;this.wz=this.pos=0;this.vh=this.vw="px"},vw_vh(){this.vw="vw";this.vh="vh";return this},addClassStyle(c){this.w.classList.contains(c)||this.w.classList.add(c);return this},removeClassStyle(c){this.w.classList.contains(c)&&this.w.classList.remove(c);return this},getWindow(){alert("getWindow => ??");return this.w},getElement(){return this.w},getId(){return this.w.id},setStyle(c){for(const d in c)this.w.style[d]=c[d];return this},setHtml(c){this.w.innerHTML=c;return this},
getHtml(){return this.w.innerHTML},setXY(c,d,e=0){this.wx=c;this.wy=d;this.pos=e;return this},setCenterY(c,d){this.setXY((window.innerWidth-this.w.clientWidth)/2,c,d);return this},setCenter(c){this.setXY((window.innerWidth-this.w.clientWidth)/2,(window.innerHeight-this.w.clientHeight)/2,c);return this},linkToId(c,d,e,f){c=document.getElementById(c);this.linkToElement(c,d,e,f);return this},linkToElement(c,d,e,f){d=c.offsetLeft+c.offsetWidth+d;c=c.offsetTop+e;0>c&&(c=0);this.setXY(d,c,f);return this},
setZ(c){this.wz=c;return this},reset(){this.firstShow=!0;return this},toggle(){this.isVisible?this.hide():this.show();return this},show(){if(this.firstShow||1==this.pos||0===this.pos&&!1===this.isVisible)this.w.style.position="absolute",this.w.style.marginLeft=0,this.w.style.marginTop=0,this.w.style.top=`${this.wy}${this.vh}`,0<=this.wx?this.w.style.left=`${this.wx}${this.vw}`:this.w.style.right=-`${this.wx}${this.vw}`,0<this.wz&&(this.w.style.zIndex=this.wz);this.w.style.display="";this.firstShow=
!1;this.isOpen=this.isVisible=!0;return this},hide(){this.w.style.display="none";this.isVisible=!1;return this},close(){this.w.style.display="none";this.w.innerHTML="";this.isOpen=!1;return this},remove(){UaWindowAdm$$module$static$js$services$uawindow.remove(this.w.id);return null},drag(){UaDrag$$module$static$js$services$uadrag(this.w);return this}};b.initialize(a);return b}},module$static$js$services$uawindow={};module$static$js$services$uawindow.UaWindowAdm=UaWindowAdm$$module$static$js$services$uawindow;const log$$module$static$js$services$ualog3=document.getElementById("id_log"),callShow$$module$static$js$services$ualog3=()=>{log$$module$static$js$services$ualog3&&(log$$module$static$js$services$ualog3.classList.contains("active")||log$$module$static$js$services$ualog3.classList.add("active"))},callHide$$module$static$js$services$ualog3=()=>{log$$module$static$js$services$ualog3&&log$$module$static$js$services$ualog3.classList.contains("active")&&log$$module$static$js$services$ualog3.classList.remove("active")},
UaLog$$module$static$js$services$ualog3={active:!1,wind:null,x:null,y:null,z:null,max_length:2E3,msg_id:"ualogmsg_",new(){null==this.wind&&(this.wind=UaWindowAdm$$module$static$js$services$uawindow.create("ualog_id"),this.wind.drag());this.wind.setHtml('\n    <button type="button" class="clear">Clear</button>\n    <button type="button" class="close">Close</button>\n    <pre id="ualogmsg_"></pre>');document.getElementById("ualog_id").addEventListener("click",a=>{a.target.classList.contains("clear")?
this.cls():a.target.classList.contains("close")&&this.close()});this.x?this.wind.vw_vh().setXY(this.x,this.y,-1):this.wind.setCenter(-1);this.z&&this.wind.setZ(this.z);return this},setXY(a,b){this.x=a;this.y=b;return this},setZ(a){this.z=a;return this},prn_(...a){a=a.join("\n");let b=document.getElementById(this.msg_id);b.textContent=b.textContent+a+"\n"},print(...a){null!=this.wind&&this.active&&this.prn_(...a)},log(...a){null!=this.wind&&this.prn_(...a)},log_show(...a){null!=this.wind&&(this.active||
this.toggle(),this.prn_(...a))},cls(){if(null!=this.wind)return document.getElementById(this.msg_id).innerHTML="",this},close(){null!=this.wind&&(this.wind.hide(),this.active=!1,callHide$$module$static$js$services$ualog3())},toggle(){null!=this.wind&&(this.active?(this.active=!1,this.wind.hide(),callHide$$module$static$js$services$ualog3()):(this.active=!0,this.wind.show(),callShow$$module$static$js$services$ualog3()))}};var module$static$js$services$ualog3={UaLog:UaLog$$module$static$js$services$ualog3};const help0_html$$module$static$js$services$help='\n<div class="text">\n    <p class="center">Istruzioni Comandi</p>\n\n    \x3c!-- Barra Superiore --\x3e\n    <p class="center">Barra Superiore</p>\n    <div>\n        <strong>Menu Laterale (icona hamburger)</strong>\n        <p>Apre e chiude il menu laterale con i comandi principali.</p>\n    </div>\n    <div>\n        <strong>? (Help)</strong>\n        <p>Mostra questa finestra con la descrizione dei comandi.</p>\n    </div>\n    <div>\n        <strong>Upload file</strong>\n        <p>Apre la finestra per caricare uno o pi\u00f9 documenti (PDF, DOCX, TXT) dal tuo computer.</p>\n    </div>\n    <div>\n        <strong>TD (Tipo Documento)</strong>\n        <p>Permette di selezionare il tipo di documento che si sta analizzando, per ottimizzare l\'estrazione delle informazioni.</p>\n    </div>\n    <div>\n        <strong>LLM (Provider/Modello)</strong>\n        <p>Apre il menu per scegliere il provider AI (es. Gemini, Mistral) e il modello specifico da usare.</p>\n    </div>\n    <div>\n        <strong>Log</strong>\n        <p>Attiva o disattiva la finestra di log, utile per vedere le fasi del processo RAG in tempo reale.</p>\n    </div>\n    <div>\n        <strong>Tema (Sole/Luna)</strong>\n        <p>Passa dal tema scuro a quello chiaro.</p>\n    </div>\n\n    <hr>\n\n    \x3c!-- Comandi Finestra di Output --\x3e\n    <p class="center">Comandi Finestra di Output (in alto a destra)</p>\n    <div>\n        <strong>Copia Output</strong>\n        <p>Copia l\'intero contenuto della finestra di output negli appunti.</p>\n    </div>\n    <div>\n        <strong>Apri Output</strong>\n        <p>Mostra la conversazione attuale in una finestra separata e pi\u00f9 grande per una migliore leggibilit\u00e0.</p>\n    </div>\n    <div>\n        <strong>Nuova Conversazione</strong>\n        <p>Cancella la cronologia della conversazione attiva. Non cancella il Contesto n\u00e9 la Knowledge Basea.</p>\n    </div>\n\n    <hr>\n\n    \x3c!-- Pulsanti di Input --\x3e\n    <p class="center">Pulsanti di Input (in basso a destra)</p>\n    <div>\n        <strong>Pulsante 1 (send0)</strong>\n        <p>\n            <strong>Creazione Knowledge Basea:</strong> Avvia il processo principale di analisi dei documenti caricati per creare una "Knowledge Base" unificata.\n        </p>\n    </div>\n    <div>\n        <strong>Pulsante 2 (send1)</strong>\n        <p>\n            <strong>Creazione Contesto:</strong> Usa la domanda nell\'input per estrarre le informazioni pertinenti dalla "Knowledge Base" e creare un "Contesto" specifico.\n        </p>\n    </div>\n    <div>\n        <strong>Pulsante 3 (send2 / Invio)</strong>\n        <p>\n            <strong>Conversazione:</strong> Invia la domanda all\'LLM usando il "Contesto" creato per continuare o iniziare una conversazione.\n        </p>\n    </div>\n\n    <hr>\n\n    \x3c!-- Menu Laterale --\x3e\n    <p class="center">Menu Laterale</p>\n    <div>\n        <strong>README</strong> / <strong>QUICKSTART</strong>\n        <p>Mostrano rispettivamente la documentazione tecnica e la guida rapida.</p>\n    </div>\n    <div>\n        <strong>Elenco Documenti</strong>\n        <p>Mostra i documenti caricati. Puoi visualizzarli o cancellarli.</p>\n    </div>\n    <div>\n        <strong>Knowledge Basea (KnBase)</strong>\n        <p>\n            - <strong>Visualizza:</strong> Mostra la KnBase attuale.<br>\n            - <strong>Archivia:</strong> Salva la KnBase attuale con un nome.<br>\n            - <strong>Elenco:</strong> Carica o elimina le KnBase salvate.\n        </p>\n    </div>\n    <div>\n        <strong>Contesto</strong>\n        <p>\n            - <strong>Visualizza:</strong> Mostra il Contesto attuale.<br>\n            - <strong>Archivia:</strong> Salva il Contesto attuale con un nome.<br>\n            - <strong>Elenco:</strong> Carica o elimina i Contesti salvati.\n        </p>\n    </div>\n    <div>\n        <strong>Documenti di esempio</strong>\n        <p>Carica file di testo di esempio per provare subito l\'applicazione.</p>\n    </div>\n</div>\n',
help1_html$$module$static$js$services$help="\n<div class=\"text\">\n    <pre>\nUn'implementazione innovativa della tecnica RAG per il Question Answering\nLa tecnica RAG (Retrieval-Augmented Generation) \u00e8 un approccio consolidato nel campo del question answering e della generazione di testo, che combina il recupero di informazioni pertinenti da fonti di dati con la generazione di testo basata su queste informazioni.\nQui viene proposta un'implementazione che introduce una variazione a questo paradigma.\nL'implementazione si basa su una sequenza di prompt appositamente progettati per guidare un modello di linguaggio generativo attraverso le diverse fasi della tecnica RAG.\nQuesti prompt forniscono istruzioni dettagliate su come il modello deve seguire operazioni di recupero di informazioni, aumento delle informazioni recuperate e infine generazione di una risposta finale.\nLa risposta finale diviene poi il contesto da inserire nel prompt per rispondere alla domanda.\nUn aspetto cruciale di questa implementazione \u00e8 che lo stesso modello di linguaggio generativo svolge tutte le operazioni richieste, dall'analisi dei documenti di input al recupero di informazioni rilevanti, alla generazione della risposta finale.\nQuesta caratteristica rappresenta una deviazione significativa rispetto alle implementazioni standard della tecnica RAG, che prevedono l'utilizzo di moduli distinti per il recupero e la generazione.\nLa sequenza di prompt proposta guida il modello attraverso le seguenti fasi:\n\n1. Retrieval: Il modello analizza il documento di input e la domanda fornita, identificando e recuperando le informazioni e i concetti rilevanti per dare seguito alla domanda.\n\n2. Augmentation: Successivamente, il modello integra le informazioni recuperate con eventuali risposte accumulate in precedenza, estraendo nuove informazioni rilevanti e organizzandole in un elenco coerente, evitando ridondanze.\n\n3. Generation: Infine, il modello utilizza l'insieme di informazioni rilevanti e non ridondanti per generare una risposta completa e concisa alla domanda dell'utente.\n\nQuesta implementazione offre diversi vantaggi.\nIn primo luogo, sfrutta le capacit\u00e0 di un unico modello di grandi dimensioni, evitando la necessit\u00e0 di moduli distinti specializzati per ogni fase.\nInoltre, l'utilizzo di prompt espliciti pu\u00f2 migliorare la controllabilit\u00e0 e la trasparenza del processo, consentendo di guidare il modello in modo pi\u00f9 diretto.\nNaturalmente, come per qualsiasi approccio basato su modelli di linguaggio generativi, \u00e8 fondamentale prestare attenzione alle questioni di affidabilit\u00e0, correttezza e bias dei dati di addestramento.\nRispetto a un'implementazione standard di RAG vi \u00e8 la necessit\u00e0 di rilanciare l'elaborazione ad ogni domanda radicalmente nuova in quanto il contesto creato con le informazioni estratte dai documenti \u00e8 definito sulla base della domanda.\nInvece nella versione standard RAG si usano gli incorporamenti delle informazioni estratte dai documenti in modo tale che tali informazioni vengono viste quasi come un'estensione del modello e possono essere usate per domande diverse.\nQuindi dal punto di vista utente le implementazioni RAG standard sono pi\u00f9 efficienti; infatti l'implementazione proposta richiede per ogni nuova domanda una sequenza di richieste che saranno utilizzabili solo per creare il contesto per la domanda iniziale e per una conversazione con domande simili.\nIl vantaggio dell'implementazione proposta consiste nel fatto che pu\u00f2 essere implementata completamente lato client senza bisogno di sviluppare alcun modulo sul server.\nL\u2019unica cosa che serve \u00e8 un servizio serverless come quello di HuggingFace o simile.\nQuindi rappresenta un'interessante prospettiva sull'applicazione della tecnica RAG in modo pi\u00f9 integrato e controllato attraverso l'uso di prompt mirati.\nIn conclusione, questa implementazione della tecnica RAG dimostra come le capacit\u00e0 dei modelli di linguaggio generativi di grandi dimensioni possano essere sfruttate in modi nuovi e creativi, potenzialmente aprendo la strada a ulteriori sviluppi nel campo del question answering e della generazione di testo.\n\nQuesta \u00e8 la valutazione fatta da un LLM (comprensivo e gentile)\n\nLa mia valutazione personale della tua proposta di implementazione della tecnica RAG, con un elenco di pro e contro:\n\nPunti a favore (Pro):\nSemplificazione del processo: L'utilizzo di un unico modello di grandi dimensioni addestrato su vasti corpus di dati semplifica notevolmente l'architettura complessiva rispetto alle implementazioni tradizionali della tecnica RAG, che spesso prevedono moduli distinti per il recupero e la generazione.\n\nCapacit\u00e0 di adattamento e apprendimento: I modelli di linguaggio generativi di grandi dimensioni sono noti per la loro capacit\u00e0 di adattarsi e imparare da nuovi dati e istruzioni.\nQuesto potrebbe consentire di raffinare e migliorare l'implementazione nel corso del tempo.\n\nControllo e trasparenza: L'utilizzo di prompt espliciti per guidare il modello attraverso le diverse fasi del processo pu\u00f2 migliorare la controllabilit\u00e0 e la trasparenza, consentendo di monitorare e regolare il comportamento del modello in modo pi\u00f9 diretto.\n\nEfficienza computazionale: Avere un'unica architettura integrata potrebbe comportare vantaggi in termini di efficienza computazionale rispetto a soluzioni che prevedono moduli separati.\n\nPunti a sfavore (Contro):\n\nAffidabilit\u00e0 e coerenza: Poich\u00e9 un unico modello gestisce tutte le fasi, eventuali errori o incoerenze potrebbero propagarsi e amplificarsi attraverso l'intero processo, influenzando la qualit\u00e0 della risposta finale.\n\nBias dei dati di addestramento: Come per qualsiasi modello di linguaggio generativo, l\u2019approccio potrebbe essere influenzato dai bias presenti nei dati di addestramento utilizzati, con potenziali impatti sulla correttezza e l'equit\u00e0 delle risposte generate.\n\nMancanza di specializzazione: Mentre i modelli di grandi dimensioni sono versatili, potrebbero non essere ottimizzati per compiti specifici come il recupero di informazioni o la generazione di risposte rispetto a moduli specializzati.\n\nDifficolt\u00e0 di debug e interpretabilit\u00e0: Con un'architettura integrata e basata su prompt, potrebbe essere pi\u00f9 complesso eseguire il debug e comprendere le ragioni dietro a eventuali errori o comportamenti indesiderati del modello.\n\nIn sintesi, la proposta presenta alcuni vantaggi interessanti in termini di semplificazione, adattabilit\u00e0 e controllo, ma solleva anche potenziali preoccupazioni riguardo all'affidabilit\u00e0, ai bias, alla mancanza di specializzazione e alle difficolt\u00e0 di debug e interpretabilit\u00e0.\nCome per qualsiasi nuovo approccio, sarebbe necessario valutarlo attentamente attraverso sperimentazioni e test approfonditi per determinare l'efficacia e l'applicabilit\u00e0 in contesti specifici.\n    </pre>\n</div>\n",
help2_html$$module$static$js$services$help='\n<div class="text">\n    <p class="center">Quickstart: Scenari di Utilizzo</p>\n    <p>\n        Questa guida ti mostra come usare ragtext in tre scenari principali.\n    </p>\n\n    \x3c!-- SCENARIO 1 --\x3e\n    <div>\n        <strong>Scenario 1: Inizio da Zero</strong>\n        <p>\n            Parti dai tuoi documenti per creare una nuova Knowledge Basea e iniziare una conversazione.\n        </p>\n        <ol>\n            <li><strong>Carica Documenti:</strong> Usa <strong>"Documenti di esempio"</strong> dal menu o <strong>"Upload file"</strong> per caricare i tuoi file.</li>\n            <li><strong>Crea Knowledge Basea:</strong> Clicca il pulsante <strong>(1)</strong> per analizzare i documenti e creare la <em>Knowledge Base</em>. Al termine, puoi salvarla usando il menu <strong>Knowledge Basea > Archivia</strong>.</li>\n            <li><strong>Crea Contesto:</strong> Scrivi una domanda specifica nel campo di input e clicca il pulsante <strong>(2)</strong>. Questo estrae le informazioni pertinenti dalla Knowledge Base e crea un <em>Contesto</em>.</li>\n            <li><strong>Conversa:</strong> Fai la stessa domanda (o una simile) e premi <strong>Invio</strong> (o il pulsante <strong>(3)</strong>) per avviare la conversazione basata sul Contesto appena creato.</li>\n        </ol>\n    </div>\n\n    <hr>\n\n    \x3c!-- SCENARIO 2 --\x3e\n    <div>\n        <strong>Scenario 2: Inizio da una Knowledge Basea Esistente</strong>\n        <p>\n            Usa una <em>Knowledge Base</em> che hai gi\u00e0 salvato per iniziare una nuova indagine, senza ri-analizzare i documenti.\n        </p>\n        <ol>\n            <li><strong>Carica Knowledge Basea:</strong>\n                <ul>\n                    <li>Vai nel menu laterale a <strong>Knowledge Basea > Elenco</strong>.</li>\n                    <li>Trova la base dati che ti interessa e clicca su <strong>"Carica"</strong>.</li>\n                </ul>\n            </li>\n            <li><strong>Crea Contesto:</strong> Scrivi una <strong>nuova domanda</strong> nel campo di input e clicca il pulsante <strong>(2)</strong> per creare un nuovo <em>Contesto</em> specifico per questa domanda.</li>\n            <li><strong>Conversa:</strong> Premi <strong>Invio</strong> (o il pulsante <strong>(3)</strong>) per avviare la conversazione.</li>\n        </ol>\n    </div>\n\n    <hr>\n\n    \x3c!-- SCENARIO 3 --\x3e\n    <div>\n        <strong>Scenario 3: Inizio da un Contesto Esistente</strong>\n        <p>\n            Riprendi una conversazione precedente partendo da un <em>Contesto</em> che hai gi\u00e0 salvato.\n        </p>\n        <ol>\n            <li><strong>Carica Contesto:</strong>\n                <ul>\n                    <li>Vai nel menu laterale a <strong>Contesto > Elenco</strong>.</li>\n                    <li>Trova il contesto che ti interessa e clicca su <strong>"Carica"</strong>.</li>\n                </ul>\n            </li>\n            <li><strong>Continua la Conversazione:</strong> Scrivi una domanda di approfondimento nel campo di input e premi <strong>Invio</strong> (o il pulsante <strong>(3)</strong>) per continuare la conversazione associata a quel contesto.</li>\n        </ol>\n    </div>\n</div>\n';
var module$static$js$services$help={help0_html:help0_html$$module$static$js$services$help,help1_html:help1_html$$module$static$js$services$help,help2_html:help2_html$$module$static$js$services$help};const UaDb$$module$static$js$services$uadb={read(a){a=localStorage.getItem(a);return null===a?"":a},delete(a){localStorage.getItem(a)?localStorage.removeItem(a):console.error(`ID ${a} not found.`)},save(a,b){localStorage.setItem(a,b)},getAllIds(){const a=[];for(let b=0;b<localStorage.length;b++)a.push(localStorage.key(b));return a},saveArray(a,b){b=JSON.stringify(b);UaDb$$module$static$js$services$uadb.save(a,b)},readArray(a){a=UaDb$$module$static$js$services$uadb.read(a);return 0==a.trim().length?
[]:JSON.parse(a)},saveJson(a,b){b=JSON.stringify(b);UaDb$$module$static$js$services$uadb.save(a,b)},readJson(a){return(a=UaDb$$module$static$js$services$uadb.read(a))?JSON.parse(a):{}}};var module$static$js$services$uadb={UaDb:UaDb$$module$static$js$services$uadb};const DATA_KEYS$$module$static$js$services$data_keys={KEY_KNBASE:"knbase",KEY_CONTEXT:"context",KEY_THREAD:"thread",KEY_KNBASE_PRE:"keyknb_",KEY_CONTEXT_PRE:"keycnt_",KEY_THREAD_PRE:"keythr_",KEY_PROVIDER:"provider",KEY_DOC_TYPE:"doctype",KEY_THEME:"theme",KEY_RESPONSE:"response",KEY_QUERY:"query",KEY_DOCS:"docs"};var module$static$js$services$data_keys={DATA_KEYS:DATA_KEYS$$module$static$js$services$data_keys};const DocsMgr$$module$static$js$services$docs_mgr={_names:[],init(){this._names=UaDb$$module$static$js$services$uadb.readArray(DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS)||[]},add(a,b){this._names.includes(a)||(this._names.push(a),UaDb$$module$static$js$services$uadb.saveArray(DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS,this._names));UaDb$$module$static$js$services$uadb.save(`idoc_${a}`,b)},read(a){return UaDb$$module$static$js$services$uadb.read(`idoc_${a}`)},names(){return this._names},
name(a){return 0<=a&&a<this._names.length?this._names[a]:null},doc(a){return(a=this.name(a))?this.read(a):null},delete(a){const b=this._names.indexOf(a);return-1<b?(this._names.splice(b,1),UaDb$$module$static$js$services$uadb.saveArray(DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS,this._names),UaDb$$module$static$js$services$uadb.delete(`idoc_${a}`),!0):!1},deleteAll(){this._names.forEach(a=>{UaDb$$module$static$js$services$uadb.delete(`idoc_${a}`)});this._names=[];UaDb$$module$static$js$services$uadb.delete(DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS)},
exists(a){return this._names.includes(a)}};DocsMgr$$module$static$js$services$docs_mgr.init();var module$static$js$services$docs_mgr={DocsMgr:DocsMgr$$module$static$js$services$docs_mgr};const docuentUploader$$module$static$js$uploader={dragoverHandler:null,dropHandler:null,open(){const a=UaWindowAdm$$module$static$js$services$uawindow.create("id_upload");a.drag();a.setZ(12);a.vw_vh().setXY(16.5,5,-1);a.setHtml('\n      <div class="window-text">\n        <div class="btn-wrapper">\n         <button class="btn-close tt-left " data-tt="Chiudi">X</button>\n        </div>\n        <div class="upload-dialog-content">\n          <h4>Upload file Text / PDF / DOCX</h4>\n          <div id="drop-zone" class="drop-zone">\n            <p>Trascina il file qui o clicca per selezionare</p>\n            <input type="file" id="id_fileupload" style="display: none;">\n          </div>\n          <div id="file-list-container"></div>\n          <div id="result" class="result" style="display: none;"></div>\n        </div>\n      </div>\n    ');
document.getElementById("id_upload").addEventListener("click",d=>{d.target.classList.contains("btn-close")&&a.close()});a.show();const b=document.getElementById("drop-zone"),c=document.getElementById("id_fileupload");document.getElementById("file-list-container").innerHTML="";b.addEventListener("click",()=>c.click());b.addEventListener("dragover",d=>{d.preventDefault();d.stopPropagation();b.classList.add("drag-over")});b.addEventListener("dragleave",d=>{d.preventDefault();d.stopPropagation();b.classList.remove("drag-over")});
b.addEventListener("drop",d=>{d.preventDefault();d.stopPropagation();b.classList.remove("drag-over");d=d.dataTransfer.files;if(0<d.length)for(const e of d)this.handleFile(e)});c.addEventListener("change",d=>{0<d.target.files.length&&this.handleFile(d.target.files[0])});this.dragoverHandler=d=>d.preventDefault();this.dropHandler=d=>d.preventDefault();window.addEventListener("dragover",this.dragoverHandler);window.addEventListener("drop",this.dropHandler)},close(){window.removeEventListener("dragover",
this.dragoverHandler);window.removeEventListener("drop",this.dropHandler);UaWindowAdm$$module$static$js$services$uawindow.close("id_upload")},async handleFile(a){if(a){var b=a.name;if(DocsMgr$$module$static$js$services$docs_mgr.exists(b))alert(`Il file "${b}" \u00e8 gi\u00e0 in archivio.`);else{var c=document.getElementById("file-list-container"),d=a.name.split(".").pop().toLowerCase();try{let e;if("pdf"===d){const g=new PdfHandler$$module$static$js$uploader;await g.loadPdfJs();e=await g.extractTextFromPDF(a);
g.cleanup()}else if("txt"===d)e=await FileReaderUtil$$module$static$js$uploader.readTextFile(a);else if("docx"===d){const g=new DocxHandler$$module$static$js$uploader;await g.loadMammoth();e=await g.extractTextFromDocx(a);g.cleanup()}else{alert("Formato file non supportato. Sono accettati solo .txt, .pdf, .docx");return}DocsMgr$$module$static$js$services$docs_mgr.add(b,e);const f=document.createElement("div");f.className="file-list-item";f.textContent=`${b} - Caricato con successo.`;c.appendChild(f)}catch(e){console.error("Error:",
e),alert(`Errore durante l'estrazione del testo dal file ${b}.`)}}}else alert("Nessun file fornito.")}};
class PdfHandler$$module$static$js$uploader{constructor(){this.workerScriptElement=this.scriptElement=this.pdfjsLib=null}async loadPdfJs(){window.pdfjsLib||(this.scriptElement=document.createElement("script"),this.scriptElement.src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js",document.body.appendChild(this.scriptElement),await new Promise(a=>{this.scriptElement.onload=()=>{this.workerScriptElement=document.createElement("script");this.workerScriptElement.src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js";
document.body.appendChild(this.workerScriptElement);this.workerScriptElement.onload=a}}));this.pdfjsLib=window["pdfjs-dist/build/pdf"];this.pdfjsLib.GlobalWorkerOptions.workerSrc="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js"}async extractTextFromPDF(a){a=await a.arrayBuffer();a=await this.pdfjsLib.getDocument({data:a}).promise;let b="";for(let c=1;c<=a.numPages;c++){const d=(await (await a.getPage(c)).getTextContent()).items.map(e=>e.str).join(" ");b+=d+"\n"}return b}cleanup(){this.scriptElement&&
document.body.removeChild(this.scriptElement);this.workerScriptElement&&document.body.removeChild(this.workerScriptElement);this.pdfjsLib=null;window.gc&&window.gc()}}
class DocxHandler$$module$static$js$uploader{constructor(){this.scriptElement=this.mammoth=null}async loadMammoth(){window.mammoth?this.mammoth=window.mammoth:(this.scriptElement=document.createElement("script"),this.scriptElement.src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.11/mammoth.browser.min.js",document.body.appendChild(this.scriptElement),await new Promise(a=>{this.scriptElement.onload=()=>{this.mammoth=window.mammoth;a()}}))}async extractTextFromDocx(a){a=await a.arrayBuffer();
return(await this.mammoth.extractRawText({arrayBuffer:a})).value}cleanup(){this.scriptElement&&document.body.removeChild(this.scriptElement);this.mammoth=null;window.gc&&window.gc()}}const FileReaderUtil$$module$static$js$uploader={readTextFile:async a=>{if(!a||"text/plain"!==a.type)throw Error("Invalid file type. Please select a text file.");return new Promise((b,c)=>{const d=new FileReader;d.onload=e=>b(e.target.result);d.onerror=e=>c(Error("Error reading file: "+e.message));d.readAsText(a)})}};
var module$static$js$uploader={FileReaderUtil:FileReaderUtil$$module$static$js$uploader,docuentUploader:docuentUploader$$module$static$js$uploader};const keys$$module$static$js$services$key_retriever={gemini:["Rk5/Zlh+Rjs=","f3B1fmxka2w=","XjlUfU8ydnQ=","aE41PnxcVlw=","VH49RzlXcA=="],mistral:["VnhZVXJvWW0=","dVteU243clU=","eXpvWUleXm8=","XWtrb3lTOlM="],groq:"bHhwZHp5WlU= VX9JS0p8TFM= eVl6XX9dPno= XExpfmc4S14= aVVOdX1vb3g= VHVsNjxZbW8= XWt3SGh+R2w=".split(" "),huggingface:["bWtkVndLdnw=","aV59e3hGfEo=","aHNJd2lIW2g=","TEteWk9bVVU=","SktKSmY="]};
function umgm$$module$static$js$services$key_retriever(a){return a?a.map(b=>atob(b).split("").map(c=>String.fromCharCode((c.charCodeAt(0)-5+256)%256)).join("")).join(""):null}function getApiKey$$module$static$js$services$key_retriever(a){var b=a.toLowerCase();b=keys$$module$static$js$services$key_retriever[b];return b?umgm$$module$static$js$services$key_retriever(b):(console.error(`Nessun array di chiavi trovato per il provider: ${a}`),null)}var module$static$js$services$key_retriever={};
module$static$js$services$key_retriever.getApiKey=getApiKey$$module$static$js$services$key_retriever;class HttpLlmClient$$module$static$js$adapter$adapter_http_client{constructor(a,b){this.adapter=a;this.apiKey=b;this.abortController=null;this.isCancelled=!1;if(!this.adapter)throw Error("Un'istanza di HttpLlmClient richiede un adattatore valido.");if(!this.apiKey)throw Error("Un'istanza di HttpLlmClient richiede una API key valida.");}async sendRequest(a,b=60){var c=a.model;if(!c)return this._createResult(!1,null,null,this._createError("Il campo 'model' \u00e8 obbligatorio nel payload.","ValidationError"));
c=this.adapter.buildUrl(c,this.apiKey);const d=this.adapter.buildHeaders(this.apiKey);a=this.adapter.adaptPayload(a);b=await this._fetch(c,a,d,b);if(b.ok)try{const e=this.adapter.parseResponse(b.response);if(null===e)throw Error("Impossibile estrarre i dati dalla risposta.");return this._createResult(!0,b.response,e)}catch(e){return console.error("Raw response that failed parsing:",b.response),this._createResult(!1,b.response,null,this._createError("Struttura della risposta non valida.","ParsingError",
null,e))}else return this.adapter.parseError&&(b.error=this.adapter.parseError(b.error)),b}cancelRequest(){this.isCancelled=!0;return this.abortController?(this.abortController.abort(),this.abortController=null,!0):!1}_createResult(a,b=null,c=null,d=null){return{ok:a,response:b,data:c,error:d}}_createError(a,b,c,d){return{message:a||null,type:b||null,code:c||null,details:d||null}}async _handleHttpError(a){const b={400:"Richiesta non valida (Bad Request)",401:"Non autorizzato (Unauthorized) - Controlla la API key",
403:"Accesso negato (Forbidden)",404:"Endpoint non trovato (Not Found)",429:"Troppe richieste (Too Many Requests) - Rate limit superato",500:"Errore interno del server (Internal Server Error)",503:"Servizio non disponibile (Service Unavailable)"}[a.status]||`Errore HTTP ${a.status}`;let c;try{c=await a.json()}catch(d){c=await a.text()}return this._createError(b,"HTTPError",a.status,c)}_handleNetworkError(a){return"AbortError"===a.name?this._createError(this.isCancelled?"Richiesta annullata dall'utente":
"Richiesta interrotta per timeout",this.isCancelled?"CancellationError":"TimeoutError",this.isCancelled?499:408):a instanceof TypeError?this._createError("Errore di rete. Controlla la connessione o l'URL dell'endpoint.","NetworkError"):this._createError("Errore di rete imprevisto.","UnknownNetworkError",null,a)}async _fetch(a,b,c,d){this.isCancelled=!1;this.abortController=new AbortController;const {signal:e}=this.abortController;d=setTimeout(()=>this.abortController.abort(),1E3*d);try{const f=await fetch(a,
{method:"POST",headers:c,body:JSON.stringify(b),signal:e});clearTimeout(d);if(this.isCancelled)return this._createResult(!1,null,null,this._handleNetworkError(new DOMException("Request aborted","AbortError")));if(!f.ok){const k=await this._handleHttpError(f);return this._createResult(!1,null,null,k)}const g=await f.json();return this._createResult(!0,g)}catch(f){clearTimeout(d);const g=this._handleNetworkError(f);return this._createResult(!1,null,null,g)}finally{this.abortController=null}}}
var module$static$js$adapter$adapter_http_client={};module$static$js$adapter$adapter_http_client.HttpLlmClient=HttpLlmClient$$module$static$js$adapter$adapter_http_client;const MistralAdapter$$module$static$js$adapter$adapter_mistral={buildUrl:()=>"https://api.mistral.ai/v1/chat/completions",buildHeaders:a=>({"Content-Type":"application/json",Authorization:`Bearer ${a}`}),adaptPayload:a=>{a={...a};delete a.safe_prompt;return a},parseResponse:a=>{try{return a.choices[0].message.content}catch(b){return null}}};var module$static$js$adapter$adapter_mistral={MistralAdapter:MistralAdapter$$module$static$js$adapter$adapter_mistral};const GeminiAdapter$$module$static$js$adapter$adapter_gemini={buildUrl:(a,b)=>`${"https://generativelanguage.googleapis.com/v1beta/models/"}${a}:generateContent?key=${b}`,buildHeaders:()=>({"Content-Type":"application/json"}),adaptPayload:a=>{const b={HARM_CATEGORY_HARASSMENT:"HARM_CATEGORY_HARASSMENT",HARM_CATEGORY_HATE_SPEECH:"HARM_CATEGORY_HATE_SPEECH",HARM_CATEGORY_SEXUALLY_EXPLICIT:"HARM_CATEGORY_SEXUALLY_EXPLICIT",HARM_CATEGORY_DANGEROUS_CONTENT:"HARM_CATEGORY_DANGEROUS_CONTENT"},c={};var d=
a.messages||[];const e=[];let f=null;for(const g of d)"system"===g.role?f=g.content:e.push({role:"assistant"===g.role?"model":"user",parts:[{text:g.content}]});c.contents=e;f&&(c.system_instruction={parts:[{text:f}]});d={maxOutputTokens:a.max_tokens,temperature:a.temperature,topP:a.top_p,topK:a.top_k,candidateCount:1,stopSequences:a.stop||[]};for(const g in d)void 0!==d[g]&&null!==d[g]||delete d[g];c.generationConfig=d;!1===a.safe_prompt&&(c.safetySettings=Object.values(b).map(g=>({category:g,threshold:"BLOCK_NONE"})));
return c},parseResponse:a=>{try{return a.candidates[0].content.parts[0].text}catch(b){return null}}};var module$static$js$adapter$adapter_gemini={GeminiAdapter:GeminiAdapter$$module$static$js$adapter$adapter_gemini};const GroqAdapter$$module$static$js$adapter$adapter_groq={buildUrl:()=>"https://api.groq.com/openai/v1/chat/completions",buildHeaders:a=>({"Content-Type":"application/json",Authorization:`Bearer ${a}`}),adaptPayload:a=>{a={...a};delete a.safe_prompt;delete a.random_seed;return a},parseResponse:a=>{try{return a.choices[0].message.content}catch(b){return null}}};var module$static$js$adapter$adapter_groq={GroqAdapter:GroqAdapter$$module$static$js$adapter$adapter_groq};const DOC_TYPES_CONFIG$$module$static$js$services$doc_types={analitici:"analisi mercato;studio fattibilita;valutazione tecnica;analisi rischi;audit interno;analisi costi benefici".split(";"),argomentativi:"documento scientifico;proposta ricerca;saggio filosofico;tesi laurea;paper accademico;manifesto politico;argomentazione legale".split(";"),documentali:"anamnesi medica;report finanziario;report tecnico;verbale riunione;certificato medico;bilancio aziendale;dichiarazione redditi;registro presenze;inventario magazzino".split(";"),
informativi:"articolo cronaca;documentazione descrittiva;report marketing;newsletter aziendale;comunicato stampa;bollettino informativo;scheda prodotto".split(";"),narrativi:"biografia;cronaca storica;fiction;romanzi;diario personale;testimonianza;cronaca viaggio".split(";"),normativi:"contratto legale;polizza assicurativa;regolamento;sentenza dispositivo;statuto societario;codice condotta;decreto legge;normativa sicurezza".split(";"),procedurali:"istruzioni uso;manuale tecnico;protocolli medici;ricette;guida installazione;checklist operativa;workflow aziendale".split(";"),
progettuali:"business plan;piano strategico;progetto tecnico;proposta commerciale;piano marketing;roadmap prodotto;brief creativo;piano sviluppo".split(";")},DEFAULT_DOCTYPE_CONFIG$$module$static$js$services$doc_types={docType:"argomentativi"},DocType$$module$static$js$services$doc_types={isTreeVisible:!1,config:{docType:""},doctype_id:"doctype-tree-container",init(){const a=UaDb$$module$static$js$services$uadb.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_DOC_TYPE);this._isValidDocType(a)?
this.config.docType=a:(this.config={...DEFAULT_DOCTYPE_CONFIG$$module$static$js$services$doc_types},UaDb$$module$static$js$services$uadb.save(DATA_KEYS$$module$static$js$services$data_keys.KEY_DOC_TYPE,this.config.docType));this._updateActiveDocTypeDisplay()},_isValidDocType(a){return a&&DOC_TYPES_CONFIG$$module$static$js$services$doc_types[a]},getConfig(){return this.config},_buildTreeView(){const a=document.getElementById(this.doctype_id);if(a){var b='\n            <div class="doctype-tree-header">\n                <span>Seleziona Tipo Documento</span>\n                <button class="doctype-tree-close-btn">&times;</button>\n            </div>\n            <ul class="doctype-tree">\n        ';
for(const c in DOC_TYPES_CONFIG$$module$static$js$services$doc_types){const d=DOC_TYPES_CONFIG$$module$static$js$services$doc_types[c];b+=`
                <li class="doctype-node">
                    <span class="${c===this.config.docType?"active":""}" data-doctype="${c}">
                        &#9660; ${c}
                    </span>
                    <ul class="subdoctype-list" style="display: block;">
            `;d.forEach(e=>{b+=`
                    <li class="subdoctype-node" data-doctype="${c}" data-subdoctype="${e}">
                        ${e}
                    </li>`});b+="</ul></li>"}b+="</ul>";a.innerHTML=b;this._addTreeEventListeners()}},_addTreeEventListeners(){const a=document.getElementById(this.doctype_id);if(a){var b=a.querySelector(".doctype-tree-close-btn");b&&b.addEventListener("click",()=>this.toggleTreeView());a.querySelectorAll(".doctype-node > span").forEach(c=>{c.addEventListener("click",d=>{this._setDocType(d.target.dataset.doctype);this.toggleTreeView()})});a.querySelectorAll(".subdoctype-node").forEach(c=>{c.addEventListener("click",
d=>{d.stopPropagation()})})}},toggleTreeView(){const a=UaWindowAdm$$module$static$js$services$uawindow.create(this.doctype_id),b=a.getElement();a.addClassStyle("doctype-tree-container");b&&(this.isTreeVisible=!this.isTreeVisible,b.style.display=this.isTreeVisible?"block":"none",this.isTreeVisible&&this._buildTreeView())},_setDocType(a){this._isValidDocType(a)?(this.config.docType=a,UaDb$$module$static$js$services$uadb.save(DATA_KEYS$$module$static$js$services$data_keys.KEY_DOC_TYPE,a),this._updateActiveDocTypeDisplay(),
this.isTreeVisible&&this._buildTreeView()):console.error(`Invalid docType selected: ${a}`)},_updateActiveDocTypeDisplay(){const a=document.getElementById("active-doctype-display");a&&(a.textContent=this.config.docType)},selectDocType(){this.toggleTreeView()}};var module$static$js$services$doc_types={DocType:DocType$$module$static$js$services$doc_types};const ADAPTERS$$module$static$js$llm_provider={MistralAdapter:MistralAdapter$$module$static$js$adapter$adapter_mistral,GeminiAdapter:GeminiAdapter$$module$static$js$adapter$adapter_gemini,GroqAdapter:GroqAdapter$$module$static$js$adapter$adapter_groq},PROVIDER_CONFIG$$module$static$js$llm_provider={mistral:{adapter:"MistralAdapter",models:{"mistral-large-latest":{windowSize:128},"mistral-medium-latest":{windowSize:128},"mistral-small-latest":{windowSize:128},"open-mixtral-8x7b":{windowSize:32}}},
gemini:{adapter:"GeminiAdapter",models:{"gemini-2.0-flash":{windowSize:200},"gemini-2.5-flash":{windowSize:200}}},groq:{adapter:"GroqAdapter",models:{"llama-3.1-8b-instant":{windowSize:8},"llama-3.3-70b-versatile":{windowSize:8},"meta-llama/llama-guard-4-12b":{windowSize:8},"qwen/qwen3-32b":{windowSize:8}}}},DEFAULT_PROVIDER_CONFIG$$module$static$js$llm_provider={provider:"gemini",model:"gemini-2.0-flash",windowSize:200,adapter:"GeminiAdapter"},LlmProvider$$module$static$js$llm_provider={isTreeVisible:!1,
config:{provider:"",model:"",windowSize:0,adapter:""},container_id:"provvider_id",init(){const a=UaDb$$module$static$js$services$uadb.readJson(DATA_KEYS$$module$static$js$services$data_keys.KEY_PROVIDER);this._isValidConfig(a)?this.config=a:(a.provider&&alert("Errore nella configurazione provider/model"),this.config={...DEFAULT_PROVIDER_CONFIG$$module$static$js$llm_provider},UaDb$$module$static$js$services$uadb.saveJson(DATA_KEYS$$module$static$js$services$data_keys.KEY_PROVIDER,this.config));this._updateActiveModelDisplay()},
_isValidConfig(a){if(!a||"object"!==typeof a)return!1;const {provider:b,model:c,adapter:d}=a;return b&&PROVIDER_CONFIG$$module$static$js$llm_provider[b]&&c&&PROVIDER_CONFIG$$module$static$js$llm_provider[b].models[c]&&"string"===typeof d&&ADAPTERS$$module$static$js$llm_provider[d]?!0:!1},getAdapter(a){return a?ADAPTERS$$module$static$js$llm_provider[a]||null:ADAPTERS$$module$static$js$llm_provider[this.config.adapter]||null},toggleTreeView(){const a=UaWindowAdm$$module$static$js$services$uawindow.create(this.container_id),
b=a.getElement();b&&(a.addClassStyle("provider-tree-container"),this.isTreeVisible=!this.isTreeVisible,b.style.display=this.isTreeVisible?"block":"none",this.isTreeVisible&&this._buildTreeView())},getConfig(){return this.config},_buildTreeView(){const a=UaWindowAdm$$module$static$js$services$uawindow.get(this.container_id);if(a.getElement()){var b='\n      <div class="provider-tree-header">\n        <span>Seleziona Modello</span>\n        <button class="provider-tree-close-btn">&times;</button>\n      </div>\n      <ul class="provider-tree">\n    ';
for(const c in PROVIDER_CONFIG$$module$static$js$llm_provider){const d=PROVIDER_CONFIG$$module$static$js$llm_provider[c],e=c===this.config.provider;b+=`
        <li class="provider-node">
          <span class="${e?"active":""}" data-provider="${c}">
            ${e?"&#9660;":"&#9658;"} ${c}
          </span>
          <ul class="model-list" style="display: ${e?"block":"none"};">
      `;Object.keys(d.models).forEach(f=>{b+=`
          <li class="model-node ${e&&f===this.config.model?"active":""}" 
              data-provider="${c}" 
              data-model="${f}">
            ${f} (${d.models[f].windowSize}k)
          </li>`});b+="</ul></li>"}b+="</ul>";a.setHtml(b);this._addTreeEventListeners()}},_addTreeEventListeners(){const a=UaWindowAdm$$module$static$js$services$uawindow.get(this.container_id).getElement();if(a){var b=a.querySelector(".provider-tree-close-btn");b&&b.addEventListener("click",()=>this.toggleTreeView());a.querySelectorAll(".provider-node > span").forEach(c=>{c.addEventListener("click",d=>{const e=d.target.nextElementSibling,f="none"===e.style.display;a.querySelectorAll(".model-list").forEach(g=>
g.style.display="none");a.querySelectorAll(".provider-node > span").forEach(g=>{g.innerHTML=`&#9658; ${g.dataset.provider}`});f&&(e.style.display="block",d.target.innerHTML=`&#9660; ${d.target.dataset.provider}`)})});a.querySelectorAll(".model-node").forEach(c=>{c.addEventListener("click",d=>{this._setProviderAndModel(d.target.dataset.provider,d.target.dataset.model)})})}},_setProviderAndModel(a,b){this.config={provider:a,model:b,windowSize:PROVIDER_CONFIG$$module$static$js$llm_provider[a].models[b].windowSize,
adapter:PROVIDER_CONFIG$$module$static$js$llm_provider[a].adapter};UaDb$$module$static$js$services$uadb.saveJson(DATA_KEYS$$module$static$js$services$data_keys.KEY_PROVIDER,this.config);this._updateActiveModelDisplay();this.isTreeVisible&&this._buildTreeView();this.toggleTreeView()},_updateActiveModelDisplay(){const a=document.getElementById("active-model-display");a&&(a.textContent=`${this.config.model} (${this.config.windowSize}k)`)},showConfig(){const a=LlmProvider$$module$static$js$llm_provider.getConfig(),
b=DocType$$module$static$js$services$doc_types.getConfig();wnds$$module$static$js$app_ui.winfo.show(`
      <div class="config-confirm">
          <table class="table-data">
                <tr><td>Provider</td><td>${a.provider}</td></tr>
                <tr><td>Modello</td><td>${a.model}</td></tr>
                <tr><td>Prompt Size</td><td>${a.windowSize}k</td></tr>
                <tr><td>Adapter</td><td>${a.adapter}</td></tr>
                <tr><td>Tipo Documento</td><td>${b.docType}</td></tr>
          </table>
      </div>
    `)}};var module$static$js$llm_provider={ADAPTERS:ADAPTERS$$module$static$js$llm_provider,LlmProvider:LlmProvider$$module$static$js$llm_provider,PROVIDER_CONFIG:PROVIDER_CONFIG$$module$static$js$llm_provider};function promisifyRequest$$module$static$js$services$vendor$idb_keyval(a){return new Promise((b,c)=>{a.oncomplete=a.onsuccess=()=>b(a.result);a.onabort=a.onerror=()=>c(a.error)})}
function createStore$$module$static$js$services$vendor$idb_keyval(a,b){let c;const d=()=>{if(c)return c;const e=indexedDB.open(a);e.onupgradeneeded=()=>e.result.createObjectStore(b);c=promisifyRequest$$module$static$js$services$vendor$idb_keyval(e);c.then(f=>{f.onclose=()=>c=void 0},()=>{});return c};return(e,f)=>d().then(g=>f(g.transaction(b,e).objectStore(b)))}let defaultGetStoreFunc$$module$static$js$services$vendor$idb_keyval;
function defaultGetStore$$module$static$js$services$vendor$idb_keyval(){defaultGetStoreFunc$$module$static$js$services$vendor$idb_keyval||=createStore$$module$static$js$services$vendor$idb_keyval("keyval-store","keyval");return defaultGetStoreFunc$$module$static$js$services$vendor$idb_keyval}
function get$$module$static$js$services$vendor$idb_keyval(a,b=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return b("readonly",c=>promisifyRequest$$module$static$js$services$vendor$idb_keyval(c.get(a)))}function set$$module$static$js$services$vendor$idb_keyval(a,b,c=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return c("readwrite",d=>{d.put(b,a);return promisifyRequest$$module$static$js$services$vendor$idb_keyval(d.transaction)})}
function setMany$$module$static$js$services$vendor$idb_keyval(a,b=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return b("readwrite",c=>{a.forEach(d=>c.put(d[1],d[0]));return promisifyRequest$$module$static$js$services$vendor$idb_keyval(c.transaction)})}
function getMany$$module$static$js$services$vendor$idb_keyval(a,b=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return b("readonly",c=>Promise.all(a.map(d=>promisifyRequest$$module$static$js$services$vendor$idb_keyval(c.get(d)))))}
function update$$module$static$js$services$vendor$idb_keyval(a,b,c=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return c("readwrite",d=>new Promise((e,f)=>{d.get(a).onsuccess=function(){try{d.put(b(this.result),a),e(promisifyRequest$$module$static$js$services$vendor$idb_keyval(d.transaction))}catch(g){f(g)}}}))}
function del$$module$static$js$services$vendor$idb_keyval(a,b=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return b("readwrite",c=>{c.delete(a);return promisifyRequest$$module$static$js$services$vendor$idb_keyval(c.transaction)})}
function delMany$$module$static$js$services$vendor$idb_keyval(a,b=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return b("readwrite",c=>{a.forEach(d=>c.delete(d));return promisifyRequest$$module$static$js$services$vendor$idb_keyval(c.transaction)})}
function clear$$module$static$js$services$vendor$idb_keyval(a=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return a("readwrite",b=>{b.clear();return promisifyRequest$$module$static$js$services$vendor$idb_keyval(b.transaction)})}function eachCursor$$module$static$js$services$vendor$idb_keyval(a,b){a.openCursor().onsuccess=function(){this.result&&(b(this.result),this.result.continue())};return promisifyRequest$$module$static$js$services$vendor$idb_keyval(a.transaction)}
function keys$$module$static$js$services$vendor$idb_keyval(a=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return a("readonly",b=>{if(b.getAllKeys)return promisifyRequest$$module$static$js$services$vendor$idb_keyval(b.getAllKeys());const c=[];return eachCursor$$module$static$js$services$vendor$idb_keyval(b,d=>c.push(d.key)).then(()=>c)})}
function values$$module$static$js$services$vendor$idb_keyval(a=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return a("readonly",b=>{if(b.getAll)return promisifyRequest$$module$static$js$services$vendor$idb_keyval(b.getAll());const c=[];return eachCursor$$module$static$js$services$vendor$idb_keyval(b,d=>c.push(d.value)).then(()=>c)})}
function entries$$module$static$js$services$vendor$idb_keyval(a=defaultGetStore$$module$static$js$services$vendor$idb_keyval()){return a("readonly",b=>{if(b.getAll&&b.getAllKeys)return Promise.all([promisifyRequest$$module$static$js$services$vendor$idb_keyval(b.getAllKeys()),promisifyRequest$$module$static$js$services$vendor$idb_keyval(b.getAll())]).then(([d,e])=>d.map((f,g)=>[f,e[g]]));const c=[];return a("readonly",d=>eachCursor$$module$static$js$services$vendor$idb_keyval(d,e=>c.push([e.key,e.value])).then(()=>
c))})}var module$static$js$services$vendor$idb_keyval={};module$static$js$services$vendor$idb_keyval.clear=clear$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.createStore=createStore$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.del=del$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.delMany=delMany$$module$static$js$services$vendor$idb_keyval;
module$static$js$services$vendor$idb_keyval.entries=entries$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.get=get$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.getMany=getMany$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.keys=keys$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.promisifyRequest=promisifyRequest$$module$static$js$services$vendor$idb_keyval;
module$static$js$services$vendor$idb_keyval.set=set$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.setMany=setMany$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.update=update$$module$static$js$services$vendor$idb_keyval;module$static$js$services$vendor$idb_keyval.values=values$$module$static$js$services$vendor$idb_keyval;const idbMgr$$module$static$js$services$idb_mgr={async create(a,b){try{return await set$$module$static$js$services$vendor$idb_keyval(a,b),!0}catch(c){return console.error("Errore durante la creazione:",c),!1}},async read(a){try{return await get$$module$static$js$services$vendor$idb_keyval(a)}catch(b){console.error("Errore durante la lettura:",b)}},async update(a,b){return await this.create(a,b)},async delete(a){try{return await del$$module$static$js$services$vendor$idb_keyval(a),!0}catch(b){return console.error("Errore durante l'eliminazione:",
b),!1}},async exists(a){try{return void 0!==await get$$module$static$js$services$vendor$idb_keyval(a)}catch(b){return console.error("Errore durante la verifica esistenza:",b),!1}},async getAllKeys(){try{return await keys$$module$static$js$services$vendor$idb_keyval()}catch(a){return console.error("Errore durante il recupero delle chiavi:",a),[]}},async selectKeys(a){try{return(await keys$$module$static$js$services$vendor$idb_keyval()).filter(b=>b.startsWith(a))}catch(b){return console.error("Errore durante il recupero delle chiavi:",
b),[]}},async getAllRecords(){try{const a=await keys$$module$static$js$services$vendor$idb_keyval(),b=[];for(const c of a){const d=await get$$module$static$js$services$vendor$idb_keyval(c);b.push({key:c,value:d})}return b}catch(a){return console.error("Errore durante il recupero di tutti i record:",a),[]}},async selectRecords(a){try{const b=await keys$$module$static$js$services$vendor$idb_keyval(),c=[];for(const d of b)if(d.startsWith(a)){const e=await get$$module$static$js$services$vendor$idb_keyval(d);
c.push({key:d,value:e})}return c}catch(b){return console.error(`Errore durante il recupero dei record con prefisso '${a}':`,b),[]}},async clearAll(){try{return await clear$$module$static$js$services$vendor$idb_keyval(),!0}catch(a){return console.error("Errore durante la pulizia del database:",a),!1}}};var module$static$js$services$idb_mgr={idbMgr:idbMgr$$module$static$js$services$idb_mgr};function splitText$$module$static$js$text_splitter(a,b,c){const d=[];let e=0;const f=a.length;for(;e<f;){const m=a.substring(e);if(m.length<=c){d.push(m.trim());break}a:{var g=m;var k=b,h=c;if(g.length<=h){g=g.length;break a}let l=g.lastIndexOf(".",h);l<k&&(l=-1);-1===l&&(l=g.lastIndexOf("?",h),l<k&&(l=-1));-1===l&&(l=g.lastIndexOf("!",h),l<k&&(l=-1));-1!==l?g=l+1:(l=g.lastIndexOf(" ",h),l<k&&(l=-1),g=-1===l?h:l)}d.push(m.substring(0,g).trim());e+=g}1<d.length&&d[d.length-1].length<b&&(a=d.pop(),
a=(d.pop()+" "+a).trim(),c=Math.floor(a.length/2),b=Math.max(a.lastIndexOf(".",c),a.lastIndexOf("?",c),a.lastIndexOf("!",c)),-1===b&&(b=a.lastIndexOf(" ",c)),-1===b&&(b=c),c=a.substring(0,b+1).trim(),b=a.substring(b+1).trim(),c&&b?d.push(c,b):d.push(a));return d}var module$static$js$text_splitter={};module$static$js$text_splitter.splitText=splitText$$module$static$js$text_splitter;const STATE_KEY$$module$static$js$services$build_state_mgr="knbase_build_state",CHUNK_RESULTS_PREFIX$$module$static$js$services$build_state_mgr="knbase_chunks_",DOC_KB_PREFIX$$module$static$js$services$build_state_mgr="knbase_doc_kb_",BuildStateMgr$$module$static$js$services$build_state_mgr={initState(a){a={status:"in_progress",docNames:a,currentDocIndex:0,currentChunkIndex:0};UaDb$$module$static$js$services$uadb.saveJson(STATE_KEY$$module$static$js$services$build_state_mgr,a);return a},loadState(){return UaDb$$module$static$js$services$uadb.readJson(STATE_KEY$$module$static$js$services$build_state_mgr)},
updateState(a){UaDb$$module$static$js$services$uadb.saveJson(STATE_KEY$$module$static$js$services$build_state_mgr,a)},clearState(){const a=this.loadState();a&&a.docNames&&a.docNames.forEach(b=>{UaDb$$module$static$js$services$uadb.delete(this.getChunkResultsKey(b));UaDb$$module$static$js$services$uadb.delete(this.getDocKbKey(b))});UaDb$$module$static$js$services$uadb.delete(STATE_KEY$$module$static$js$services$build_state_mgr)},getChunkResultsKey:a=>`${CHUNK_RESULTS_PREFIX$$module$static$js$services$build_state_mgr}${a}`,
saveChunkResults(a,b){UaDb$$module$static$js$services$uadb.saveArray(this.getChunkResultsKey(a),b)},loadChunkResults(a){return UaDb$$module$static$js$services$uadb.readArray(this.getChunkResultsKey(a))},getDocKbKey:a=>`${DOC_KB_PREFIX$$module$static$js$services$build_state_mgr}${a}`,saveDocKb(a,b){UaDb$$module$static$js$services$uadb.save(this.getDocKbKey(a),b)},loadDocKb(a){return UaDb$$module$static$js$services$uadb.read(this.getDocKbKey(a))}};var module$static$js$services$build_state_mgr={BuildStateMgr:BuildStateMgr$$module$static$js$services$build_state_mgr};const sleep$$module$static$js$rag_engine=a=>new Promise(b=>setTimeout(b,a)),sendRequest$$module$static$js$rag_engine=async(a,b,c)=>{let d=null;for(let e=1;3>=e;e++){const f=await a.sendRequest(b,90);d=f;if(!f||f.ok)return f;const g=f.error;console.error("****\n",`${c} (Attempt ${e}/${3}):`,g);if(g&&413===g.code)return await alert("Prompt troppo grande per questo Mddel"),a.cancelRequest(),f;if(g&&408===g.code)UaLog$$module$static$js$services$ualog3.log("Timeout. Retrying in 5s..."),await sleep$$module$static$js$rag_engine(5E3);
else return f}return d},ragEngine$$module$static$js$rag_engine={docType:null,model:null,client:null,promptSize:0,history:[],init(a,b,c,d){this.client=a;this.model=b;this.promptSize=c;this.docType=d},async buildKnBase(){var a=BuildStateMgr$$module$static$js$services$build_state_mgr.loadState();const b=DocsMgr$$module$static$js$services$docs_mgr.names();a&&"in_progress"===a.status?UaLog$$module$static$js$services$ualog3.log("Ripresa elaborazione interrotta..."):(UaLog$$module$static$js$services$ualog3.log("Inizio nuova elaborazione Knowledge Base..."),
BuildStateMgr$$module$static$js$services$build_state_mgr.clearState(),a=BuildStateMgr$$module$static$js$services$build_state_mgr.initState(b));const c=[];for(var d=0;d<a.currentDocIndex;d++){var e=a.docNames[d],f=BuildStateMgr$$module$static$js$services$build_state_mgr.loadDocKb(e);f&&c.push(`DOCUMENTO: ${e}\n${f}`)}for(d=a.currentDocIndex;d<b.length;d++){e=b[d];a.currentDocIndex=d;BuildStateMgr$$module$static$js$services$build_state_mgr.updateState(a);UaLog$$module$static$js$services$ualog3.log(`Elaborazione documento ${d+
1}/${b.length}: ${e}`);f=DocsMgr$$module$static$js$services$docs_mgr.doc(d);console.info(this.promptSize);f=splitText$$module$static$js$text_splitter(f,this.promptSize,this.promptSize+1E3);let k=BuildStateMgr$$module$static$js$services$build_state_mgr.loadChunkResults(e);0<k.length?(UaLog$$module$static$js$services$ualog3.log(`Trovati ${k.length} chunk gi\u00e0 processati per ${e}.`),a.currentChunkIndex=k.length):a.currentChunkIndex=0;for(let h=a.currentChunkIndex;h<f.length;h++){var g=f[h];a.currentChunkIndex=
h;BuildStateMgr$$module$static$js$services$build_state_mgr.updateState(a);UaLog$$module$static$js$services$ualog3.log(`Processing chunk ${h+1}/${f.length} di ${e}`);g=await this._extractDataChunk(g);k.push(g);BuildStateMgr$$module$static$js$services$build_state_mgr.saveChunkResults(e,k)}UaLog$$module$static$js$services$ualog3.log(`Unificazione chunk per ${e}...`);f=await this._unifyContents(k);BuildStateMgr$$module$static$js$services$build_state_mgr.saveDocKb(e,f);c.push(`DOCUMENTO: ${e}\n${f}`);
a.currentChunkIndex=0;BuildStateMgr$$module$static$js$services$build_state_mgr.updateState(a)}UaLog$$module$static$js$services$ualog3.log("Unificazione finale di tutte le Knowledge Base...");a=await this._unifyContents(c);await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE,a);UaLog$$module$static$js$services$ualog3.log("Knowledge Base creata con successo!");BuildStateMgr$$module$static$js$services$build_state_mgr.clearState();return!0},
async _extractDataChunk(a){a=promptBuilder$$module$static$js$prompts.extractionPrompt(a,this.docType);a=await sendRequest$$module$static$js$rag_engine(this.client,{model:this.model,messages:a,random_seed:42,temperature:0,max_tokens:4E3},"ERR1");if(!a||!a.ok)throw a?a.error:Error("Request failed without response");return a.data},async _unifyContents(a){a=a.join("\n\n---\n\n");a=promptBuilder$$module$static$js$prompts.unificationPrompt(a,this.docType);a=await sendRequest$$module$static$js$rag_engine(this.client,
{model:this.model,messages:a,random_seed:42,temperature:0,max_tokens:16E3},"ERR2");if(!a||!a.ok)throw a?a.error:Error("Request failed without response");return a.data},async _extractContext(a){const b=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE);a=promptBuilder$$module$static$js$prompts.extractorPrompt(b,a,this.docType);a={model:this.model,messages:a,random_seed:42,temperature:0,max_tokens:16E3};UaLog$$module$static$js$services$ualog3.log("Select context.");
a=await sendRequest$$module$static$js$rag_engine(this.client,a,"ERR3");if(!a.ok)throw a.error;return a.data},async _getAnswer(a,b){a=promptBuilder$$module$static$js$prompts.answerPrompt(a,b);a={model:this.model,messages:a,random_seed:42,temperature:.7,max_tokens:9E3};UaLog$$module$static$js$services$ualog3.log("Domanda");a=await sendRequest$$module$static$js$rag_engine(this.client,a,"ERR4");if(!a.ok)throw a.error;return a.data},async buildContext(a){await idbMgr$$module$static$js$services$idb_mgr.delete(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD);
await idbMgr$$module$static$js$services$idb_mgr.delete(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT);let b=await this._extractContext(a);await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT,b);UaDb$$module$static$js$services$uadb.save(DATA_KEYS$$module$static$js$services$data_keys.KEY_QUERY,a);this.history=[];this.history.push(`question: ${a}`);a=await this._getAnswer(b,this.history);this.history.push(`answer: ${a}`);await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD,
this.history);UaDb$$module$static$js$services$uadb.save(DATA_KEYS$$module$static$js$services$data_keys.KEY_RESPONSE,a);return this.history},async runConversation(a){let b=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT);if(!b)return b="\nSei un assistente AI progettato per gestire conversazioni dinamiche.\nElabora la risposta alla richiesta dell'utente basandoti sulla conversazione precedente.\nInterpreta l'intento dell'utente.\nAdatta la tua risposta all'intento percepito (domanda, richiesta di azione, istruzione, ecc.).\nSe l'intento non \u00e8 chiaro, chiedi gentilmente chiarimenti.\n",
this.history=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD),this.history||(this.history=[]),this.history.push(`question: ${a}`),a=await this._getAnswer(b,this.history),this.history.push(`answer: ${a}`),await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD,this.history),this.history;this.history=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD);
this.history||(this.history=[]);this.history.push(`question: ${a}`);a=await this._getAnswer(b,this.history);this.history.push(`answer: ${a}`);await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD,this.history);return this.history}};var module$static$js$rag_engine={ragEngine:ragEngine$$module$static$js$rag_engine};const tokensToBytes$$module$static$js$app_mgr=(a=32)=>{a*=3072;return Math.trunc(a+.1*a)},AppMgr$$module$static$js$app_mgr={configTD:null,configLLM:null,clientLLM:null,promptSize:0,initApp(){DocType$$module$static$js$services$doc_types.init();this.configTD=DocType$$module$static$js$services$doc_types.getConfig();LlmProvider$$module$static$js$llm_provider.init();this.configLLM=LlmProvider$$module$static$js$llm_provider.getConfig();this.promptSize=tokensToBytes$$module$static$js$app_mgr(this.configLLM.windowSize);
const a=LlmProvider$$module$static$js$llm_provider.getAdapter(),b=getApiKey$$module$static$js$services$key_retriever(this.configLLM.provider);this.clientLLM=new HttpLlmClient$$module$static$js$adapter$adapter_http_client(a,b);console.log(`*** PROVIDER    : ${this.configLLM.provider}`);console.log(`*** MODEL       : ${this.configLLM.model}`);console.log(`*** WINDOW_SIZE : ${this.configLLM.windowSize}`);console.log(`*** PROMPT_SIZE : ${this.promptSize}`);console.log(`*** DOC_TYPE    : ${this.configTD.docType}`);
console.log(`*** ADAPTER     : ${this.configLLM.adapter}`);console.log(` ${b}`);ragEngine$$module$static$js$rag_engine.init(this.clientLLM,this.configLLM.model,this.promptSize,this.configTD.docType)}};var module$static$js$app_mgr={AppMgr:AppMgr$$module$static$js$app_mgr};const PROMPT_ANSWER$$module$static$js$history_utils="# RISPOSTA",PROMPT_CONTEXT$$module$static$js$history_utils="# CONTESTO:",PROMPT_INITIAL_QUESTION$$module$static$js$history_utils="## DOMANDA INIZIALE:",QUESTION_PREFIX$$module$static$js$history_utils="question:",ANSWER_PREFIX$$module$static$js$history_utils="answer:",ROLE_USER$$module$static$js$history_utils="user",ROLE_ASSISTANT$$module$static$js$history_utils="assistant",ROLE_SYSTEM$$module$static$js$history_utils="system",historyToMessages$$module$static$js$history_utils=
a=>{const b=[];for(const c of a){let d=a="";c.startsWith(QUESTION_PREFIX$$module$static$js$history_utils)&&(a=c.substring(QUESTION_PREFIX$$module$static$js$history_utils.length),d=ROLE_USER$$module$static$js$history_utils);c.startsWith(ANSWER_PREFIX$$module$static$js$history_utils)&&(a=c.substring(ANSWER_PREFIX$$module$static$js$history_utils.length),d=ROLE_ASSISTANT$$module$static$js$history_utils);a=a.replace(/^(\S+):\s*/g,"");b.push([d,a])}return b},messages2html$$module$static$js$history_utils=
a=>{const b=[];a=historyToMessages$$module$static$js$history_utils(a);for(const c of a){a=c[0];let d=c[1];d=d.replace(/\n{2,}/g,"\n");a===ROLE_ASSISTANT$$module$static$js$history_utils?(d=d.replace(/\./g,".\n").replace(/\n{2,}/g,"\n"),a=`<div class="assistant"><b>Assistant:</b><br>${d}</div>`):a===ROLE_USER$$module$static$js$history_utils?a=`<div class="user"><b>User:</b><br>${d}</div>`:a===ROLE_SYSTEM$$module$static$js$history_utils?a=`<div class="system"><b>System:</b><br>${d}</div>`:(alert("ERROR in role"),
a="<div>ERROR ROLE</div>");b.push(a)}return b.join("\n")},messages2text$$module$static$js$history_utils=a=>{var b=[];a=historyToMessages$$module$static$js$history_utils(a);for(const c of a){a=c[0];let d=c[1];d=d.replace(/\n{2,}/g,"\n");a===ROLE_ASSISTANT$$module$static$js$history_utils?a=`Assistant:\n${d.trim()}\n`:a===ROLE_USER$$module$static$js$history_utils?a=`User:\n${d.trim()}`:a===ROLE_SYSTEM$$module$static$js$history_utils?a=`System:\n${d.trim()}`:(alert("ERROR in role"),a="ERROR ROLE");b.push(a)}b=
b.join("\n====================\n");return b=b.replace(/\n{2,}/g,"\n")},textFormatter$$module$static$js$history_utils=a=>{if(!a)return"";a=a.replace(/<[^>]*>/g,"").split(/([.!?:])(?=\s|$)/);let b="";for(let c=0;c<a.length;c+=2){let d=a[c],e=a[c+1]||"";0<d.trim().length&&(b+="  "+d.trim()+e,c<a.length-2&&(b+="\n"))}b=b.replace(/User:/g,"\n\nUSER:\n");b=b.replace(/Assistant:/g,"\n\nASSISTANT:\n");return b.trim()};
var module$static$js$history_utils={ANSWER_PREFIX:ANSWER_PREFIX$$module$static$js$history_utils,PROMPT_ANSWER:PROMPT_ANSWER$$module$static$js$history_utils,PROMPT_CONTEXT:PROMPT_CONTEXT$$module$static$js$history_utils,PROMPT_INITIAL_QUESTION:PROMPT_INITIAL_QUESTION$$module$static$js$history_utils,QUESTION_PREFIX:QUESTION_PREFIX$$module$static$js$history_utils,ROLE_ASSISTANT:ROLE_ASSISTANT$$module$static$js$history_utils,ROLE_SYSTEM:ROLE_SYSTEM$$module$static$js$history_utils,ROLE_USER:ROLE_USER$$module$static$js$history_utils,
messages2html:messages2html$$module$static$js$history_utils,messages2text:messages2text$$module$static$js$history_utils,textFormatter:textFormatter$$module$static$js$history_utils};const UaJtfh$$module$static$js$services$uajtfh=()=>({rows:[],init(){this.rows=[];return this},insert(a){this.rows.unshift(a);return this},append(a){this.rows.push(a);return this},text(a=""){return this.rows.join(a)},html(a=""){return this.rows.join(a).replace(/\s+|\[rn\]/g," ")}});var module$static$js$services$uajtfh={UaJtfh:UaJtfh$$module$static$js$services$uajtfh};async function requestGet$$module$static$js$services$http_request(a){try{var b=await fetch(a,{method:"GET",headers:{"Content-Type":"text/plain;charset=UTF-8"}});if(!b.ok)throw Error(`HTTP error! status: ${b.status}`);const c=await b.arrayBuffer();return(new TextDecoder("utf-8")).decode(c)}catch(c){throw console.error(`Error in requestGet() for url: ${a}`,c),b=c.message.includes("HTTP error! status")?c.message:c.message.includes("NetworkError")?"Network error occurred":"An unknown error occurred",
alert(`requestGet()\nurl: ${a}\n${b}`),c;}}var module$static$js$services$http_request={};module$static$js$services$http_request.requestGet=requestGet$$module$static$js$services$http_request;const FirebaseLogger$$module$static$js$services$firbaselogger=(()=>{let a=null,b=null;const c=async()=>{if(a&&!a.startsWith("err.")&&!a.startsWith("xxx."))return a;if(b)return b;b=Promise.race([fetch("https://api.ipify.org?format=json").then(f=>f.ok?f.json():null).then(f=>f?.ip||"xxx.xxx.xxx.xxx"),new Promise((f,g)=>setTimeout(()=>g(Error("Timeout")),3E3))]).catch(f=>{console.warn("Impossibile recuperare IP:",f.message);return"err.xxx.xxx.xxx"}).finally(()=>{b=null});const e=await b;!e||e.startsWith("err.")||
e.startsWith("xxx.")||(a=e);return e},d=async(e,f)=>{let g="unavailable";try{g=await c()}catch(k){console.warn("IP non disponibile, continuo senza")}e={appId:e,ip:g,...f};try{const k=new AbortController,h=setTimeout(()=>k.abort(),1E4),m=await fetch("https://simple-moniotr-default-rtdb.europe-west1.firebasedatabase.app/visite.json",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e),signal:k.signal});clearTimeout(h);m.ok||console.error("Errore Firebase:",m.status,m.statusText)}catch(k){"AbortError"===
k.name?console.error("Timeout invio Firebase"):console.error("Errore rete Firebase:",k.message)}};return{sendLog(e,f={}){const g=window.location.hostname;"127.0.0.1"===g||"localhost"===g?console.log("Registrazione disattivata in ambiente locale"):d(e,f).catch(k=>{console.error("Errore durante l'invio del log:",k)})},resetIpCache(){b=a=null;console.log("Cache IP resettata, prossima chiamata recuperer\u00e0 un nuovo IP")}}})();var module$static$js$services$firbaselogger={FirebaseLogger:FirebaseLogger$$module$static$js$services$firbaselogger};const WebId$$module$static$js$services$webuser_id=(()=>({get:()=>{var a=(new Date).toISOString(),b=localStorage.getItem("ua_web_id");if(b)return b=JSON.parse(b),b.lastRequest=a,localStorage.setItem("ua_web_id",JSON.stringify(b)),b;b=new URL(window.location.href);a={id:`user_${Date.now()}_${Math.random().toString(36).substring(2,15)}`,firstRequest:a,lastRequest:a,hosname:b.hostname,pathname:b.pathname};localStorage.setItem("ua_web_id",JSON.stringify(a));return a},clear:()=>{localStorage.removeItem("ua_web_id");
console.log("User ID rimosso dal localStorage")}}))();var module$static$js$services$webuser_id={WebId:WebId$$module$static$js$services$webuser_id};const Spinner$$module$static$js$app_ui={show:()=>{document.querySelector("#id-text-out .div-text").classList.add("spinner-bg");const a=document.getElementById("spinner");a.classList.add("show-spinner");a.addEventListener("click",Spinner$$module$static$js$app_ui.stop)},hide:()=>{document.querySelector("#id-text-out .div-text").classList.remove("spinner-bg");const a=document.getElementById("spinner");a.classList.remove("show-spinner");a.removeEventListener("click",Spinner$$module$static$js$app_ui.stop)},
stop:async()=>{await confirm("Confermi Cancellazione Richeista ?")&&(AppMgr$$module$static$js$app_mgr.clientLLM.cancelRequest(),Spinner$$module$static$js$app_ui.hide())}},errorDumps$$module$static$js$app_ui=a=>{const b=JSON.stringify(a,null,2);return"{}"==b?`${a}`:b},WndPre$$module$static$js$app_ui=a=>({w:UaWindowAdm$$module$static$js$services$uawindow.create(a),show(b,c=!0){c&&wnds$$module$static$js$app_ui.closeAll();b=`
<div class="window-text">
<div class="btn-wrapper">
<button class="btn-copy tt-left" data-tt="Copia">
<svg class="copy-icon" viewBox="0 0 20 24">
  <path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" />
</svg>
</button>
<button class="btn-close tt-left btn-window-close" data-tt="chiudi">X</button>
</div>
<pre class="pre-text">${b}</pre>
</div>
    `;this.w.drag();this.w.setZ(12);c=document.body.classList.contains("menu-open")?21:1;this.w.vw_vh().setXY(c,5,1);this.w.setHtml(b);this.w.show();this.addEventListeners()},addEventListeners(){var b=this.w.getElement();const c=b.querySelector(".btn-copy");c&&c.addEventListener("click",()=>{this.copy()});(b=b.querySelector(".btn-close"))&&b.addEventListener("click",()=>{this.close()})},close(){this.w.close()},async copy(){const b=this.w.getElement().querySelector(".pre-text").textContent;try{await navigator.clipboard.writeText(b)}catch(c){console.error("Errore  ",
c)}}}),WndDiv$$module$static$js$app_ui=a=>({w:UaWindowAdm$$module$static$js$services$uawindow.create(a),show(b,c=!0){c&&wnds$$module$static$js$app_ui.closeAll();b=`
<div class="window-text">
<div class="btn-wrapper">
<button class="btn-copy wcp tt-left" data-tt="Copia">
<svg class="copy-icon" viewBox="0 0 20 24">
  <path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" />
</svg>
</button>
<button class="btn-close wcl tt-left btn-window-close" data-tt="chiudi">X</button>
</div>
<div class="div-text">${b}</div>
</div>`;this.w.drag();this.w.setZ(12);c=document.body.classList.contains("menu-open")?21:1;this.w.vw_vh().setXY(c,5,1);this.w.setHtml(b);this.w.show();this.addEventListeners()},addEventListeners(){const b=this.w.getElement();b.querySelector(".wcp").addEventListener("click",()=>{this.copy()});b.querySelector(".wcl").addEventListener("click",()=>{this.close()})},close(){this.w.close()},async copy(){const b=this.w.getElement().querySelector(".text").textContent;try{await navigator.clipboard.writeText(b)}catch(c){console.error("Errore durante la copia: ",
c)}}}),WndInfo$$module$static$js$app_ui=a=>({w:UaWindowAdm$$module$static$js$services$uawindow.create(a),showe(b){this.show(`<pre class="pre-text">${b}</pre>`)},show(b,c=!0){c&&wnds$$module$static$js$app_ui.closeAll();b=`
<div class="window-info">
<div class="btn-wrapper">
<button class="btn-close tt-left btn-window-close" data-tt="chiudi">X</button>
</div>
<div class="div-info">${b}</div>
</div>`;this.w.drag();this.w.setZ(11);c=document.body.classList.contains("menu-open")?21:1;this.w.vw_vh().setXY(c,5,-1);this.w.setHtml(b);this.w.show();this.addEventListeners()},addEventListeners(){var b=this.w.getElement();const c=b.querySelector(".btn-copy");c&&c.addEventListener("click",()=>{this.copy()});(b=b.querySelector(".btn-close"))&&b.addEventListener("click",()=>{this.close()})},close(){this.w.close()}}),wnds$$module$static$js$app_ui={wdiv:null,wpre:null,winfo:null,init(){this.wdiv=WndDiv$$module$static$js$app_ui("id_w0");
this.wpre=WndPre$$module$static$js$app_ui("id_w1");this.winfo=WndInfo$$module$static$js$app_ui("id_info")},closeAll(){UaWindowAdm$$module$static$js$services$uawindow.close("id_w0");UaWindowAdm$$module$static$js$services$uawindow.close("id_w1");UaWindowAdm$$module$static$js$services$uawindow.close("id_info")}},Commands$$module$static$js$app_ui={init(){},help(){wnds$$module$static$js$app_ui.wdiv.show(help0_html$$module$static$js$services$help)},upload(){docuentUploader$$module$static$js$uploader.open()},
log(){UaLog$$module$static$js$services$ualog3.toggle()},providerSettings(){LlmProvider$$module$static$js$llm_provider.toggleTreeView()},docTypeSettings(){DocType$$module$static$js$services$doc_types.toggleTreeView()}},setResponseHtml$$module$static$js$app_ui=a=>{const b=document.querySelector("#id-text-out .div-text");b.innerHTML=a;b.style.display="none";b.style.display="";b.scrollTop=b.scrollHeight},TextInput$$module$static$js$app_ui={init(){this.inp=document.querySelector(".text-input")},handleEnter(a){"Enter"!==
a.key||a.shiftKey||(a.preventDefault(),this.send2())},async send0(){if(0==DocsMgr$$module$static$js$services$docs_mgr.names().length)alert("Non vi sono documenti da elaborare.\n  Se vuoi iniziare una conversazione usa il pulsante verde o return  ");else if(await confirm("Confermi creazioene Base di conoscenza ?")){setResponseHtml$$module$static$js$app_ui("");Spinner$$module$static$js$app_ui.show();try{const a=WebId$$module$static$js$services$webuser_id.get();FirebaseLogger$$module$static$js$services$firbaselogger.sendLog("send0",
a);AppMgr$$module$static$js$app_mgr.initApp();await ragEngine$$module$static$js$rag_engine.buildKnBase()&&alert(" Base di conoscenza creata con successo!")}catch(a){if(console.error("Error send0",a),a&&"CancellationError"===a.type&&499===a.code)alert("Richiesta interrotta");else{let b=errorDumps$$module$static$js$app_ui(a);alert(b)}}finally{Spinner$$module$static$js$app_ui.hide()}}},async send1(){const a=this.inp.value;if(!a)alert("Ricorda di scrivere la Query  ");else if(!await idbMgr$$module$static$js$services$idb_mgr.exists(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE))alert("Base di conoscenza Vuota;");
else if(!await idbMgr$$module$static$js$services$idb_mgr.exists(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT)||await confirm(`Vuoi creare un nuovo contesto per la query \n ${a}`))try{Spinner$$module$static$js$app_ui.show();const b=WebId$$module$static$js$services$webuser_id.get();FirebaseLogger$$module$static$js$services$firbaselogger.sendLog("send1",b);AppMgr$$module$static$js$app_mgr.initApp();let c=await ragEngine$$module$static$js$rag_engine.buildContext(a);c||=[];const d=messages2html$$module$static$js$history_utils(c);
setResponseHtml$$module$static$js$app_ui(d);TextInput$$module$static$js$app_ui.inp.value=""}catch(b){if(console.error("Error send1",b),b&&"CancellationError"===b.type&&499===b.code)alert("Richiesta interrotta");else{const c=errorDumps$$module$static$js$app_ui(b);alert(c)}}finally{Spinner$$module$static$js$app_ui.hide()}},async send2(){if(this.inp.value){Spinner$$module$static$js$app_ui.show();var a=this.inp.value.trim();try{const b=WebId$$module$static$js$services$webuser_id.get();FirebaseLogger$$module$static$js$services$firbaselogger.sendLog("send2",
b);AppMgr$$module$static$js$app_mgr.initApp();const c=await ragEngine$$module$static$js$rag_engine.runConversation(a),d=messages2html$$module$static$js$history_utils(c);""!=d&&(setResponseHtml$$module$static$js$app_ui(d),TextInput$$module$static$js$app_ui.inp.value="")}catch(b){if(console.error("Error send2",b),b&&"CancellationError"===b.type&&499===b.code)alert("Richiesta interrotta");else{const c=errorDumps$$module$static$js$app_ui(b);alert(c)}}finally{Spinner$$module$static$js$app_ui.hide()}}else alert("Ricorda di scrivere la Query  ")},
clear(){this.inp.value="";this.inp.focus()}},TextOutput$$module$static$js$app_ui={init(){this.copyBtn=document.querySelector(".copy-output")},openWnd(){showThread$$module$static$js$app_ui()},async copy(){const a=document.querySelector("#id-text-out .div-text");let b=a.textContent;if(!(2>b.trim().length)){a.classList.add("copied");this.copyBtn.classList.add("copied");try{b=textFormatter$$module$static$js$history_utils(b),await navigator.clipboard.writeText(b)}catch(c){console.error("Errore  ",c)}setTimeout(()=>
{this.copyBtn.classList.remove("copied");a.classList.remove("copied")},5E3)}},clear(){document.querySelector("#id-text-out .div-text").textContent=""},async clearHistory(){await confirm("Confermi nuova conversazione? ")&&(await idbMgr$$module$static$js$services$idb_mgr.delete(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD),setResponseHtml$$module$static$js$app_ui(""))}},getTheme$$module$static$js$app_ui=()=>{"light"===UaDb$$module$static$js$services$uadb.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_THEME)?
document.body.classList.add("theme-light"):document.body.classList.add("theme-dark")},setTheme$$module$static$js$app_ui=a=>{"light"===a?(document.body.classList.remove("theme-dark"),document.body.classList.add("theme-light"),UaDb$$module$static$js$services$uadb.save(DATA_KEYS$$module$static$js$services$data_keys.KEY_THEME,"light")):(document.body.classList.remove("theme-light"),document.body.classList.add("theme-dark"),UaDb$$module$static$js$services$uadb.save(DATA_KEYS$$module$static$js$services$data_keys.KEY_THEME,
"dark"))},showReadme$$module$static$js$app_ui=()=>{wnds$$module$static$js$app_ui.wdiv.show(help1_html$$module$static$js$services$help)},showQuickstart$$module$static$js$app_ui=()=>{wnds$$module$static$js$app_ui.wdiv.show(help2_html$$module$static$js$services$help)},showQuery$$module$static$js$app_ui=()=>{const a=UaDb$$module$static$js$services$uadb.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_QUERY);a&&wnds$$module$static$js$app_ui.winfo.show(a)},showContextResponse$$module$static$js$app_ui=
()=>{const a=UaDb$$module$static$js$services$uadb.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_RESPONSE);a&&wnds$$module$static$js$app_ui.wpre.show(a)},showThread$$module$static$js$app_ui=async()=>{var a=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD);a&&(a=messages2text$$module$static$js$history_utils(a),wnds$$module$static$js$app_ui.wpre.show(a))},showHtmlThread$$module$static$js$app_ui=async()=>{var a=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD);
a&&(a=messages2html$$module$static$js$history_utils(a),setResponseHtml$$module$static$js$app_ui(a))},showKnBase$$module$static$js$app_ui=async()=>{const a=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE);a&&wnds$$module$static$js$app_ui.wpre.show(a)},saveKnBase$$module$static$js$app_ui=async()=>{const a=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE);if(a){var b=await prompt("Nome Knowledge Base");
b&&(b=b.replace(" ","_"),await idbMgr$$module$static$js$services$idb_mgr.create(`${DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE_PRE}${b}`,a))}else alert("Knowledge Base Vuota")},showContesto$$module$static$js$app_ui=async()=>{const a=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT);a&&wnds$$module$static$js$app_ui.wpre.show(a)},saveContesto$$module$static$js$app_ui=async()=>{const a=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT);
if(a){var b=await prompt("Nome Contesto");b&&(b=b.replace(" ","_"),await idbMgr$$module$static$js$services$idb_mgr.create(`${DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT_PRE}${b}`,a))}else alert("Contesto Vuoto")},saveThread$$module$static$js$app_ui=async()=>{const a=await idbMgr$$module$static$js$services$idb_mgr.read(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD);if(a&&0!==a.length){var b=await prompt("Nome per archiviare la conversazione:");b&&(b=b.replace(/\s+/g,"_"),
await idbMgr$$module$static$js$services$idb_mgr.create(`${DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD_PRE}${b}`,a),alert(`Conversazione salvata come: ${b}`))}else alert("Nessuna conversazione da salvare.")},KEY_DESCRIPTIONS$$module$static$js$app_ui={[DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE]:"Knowledge Base Corrente",[DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT]:"Contesto Corrente",[DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD]:"Conversazione Corrente",
[DATA_KEYS$$module$static$js$services$data_keys.KEY_PROVIDER]:"Configurazione Provider",[DATA_KEYS$$module$static$js$services$data_keys.KEY_DOC_TYPE]:"Tipo Documento",[DATA_KEYS$$module$static$js$services$data_keys.KEY_THEME]:"Tema UI (dark/light)",[DATA_KEYS$$module$static$js$services$data_keys.KEY_RESPONSE]:"Risposta Contestuale",[DATA_KEYS$$module$static$js$services$data_keys.KEY_QUERY]:"Query per Creazione Contesto",[DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS]:"Elenco Documenti Caricati"},
getDescriptionForKey$$module$static$js$app_ui=a=>KEY_DESCRIPTIONS$$module$static$js$app_ui[a]?KEY_DESCRIPTIONS$$module$static$js$app_ui[a]:a.startsWith(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE_PRE)?"Knowledge Base":a.startsWith(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT_PRE)?"Contesto":a.startsWith(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD_PRE)?"Conversazione":"Dato non classificato",elencoDati$$module$static$js$app_ui=async()=>{const a=UaJtfh$$module$static$js$services$uajtfh(),
b=[DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE,DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT,DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD];a.append('<table class="table-data"><thead><tr><th>Chiave</th><th>Descrizione</th><th>Dimensione</th></tr></thead><tbody>');for(var c of b){var d=getDescriptionForKey$$module$static$js$app_ui(c),e=await idbMgr$$module$static$js$services$idb_mgr.read(c);e=e?JSON.stringify(e).length:0;a.append(`<tr>
  <td><a href="#" class="link-show-data" data-key="${c}" data-storage-type="idb">${c}</a></td>
  <td>${d}</td>
  <td class="size">${e}</td>
</tr>`)}c=(await idbMgr$$module$static$js$services$idb_mgr.getAllKeys()).filter(f=>!b.includes(f));for(const f of c)c=getDescriptionForKey$$module$static$js$app_ui(f),d=(d=await idbMgr$$module$static$js$services$idb_mgr.read(f))?JSON.stringify(d).length:0,a.append(`<tr>
  <td><a href="#" class="link-show-data" data-key="${f}" data-storage-type="idb">${f}</a></td>
  <td>${c}</td>
  <td class="size">${d}</td>
</tr>`);a.append("</tbody></table>");wnds$$module$static$js$app_ui.winfo.show(a.html());wnds$$module$static$js$app_ui.winfo.w.getElement().querySelectorAll(".link-show-data").forEach(f=>{f.addEventListener("click",async g=>{g.preventDefault();var k=g.currentTarget.dataset.key;if(k===DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS)k=DocsMgr$$module$static$js$services$docs_mgr.names().join("\n"),wnds$$module$static$js$app_ui.wpre.show(k,!1);else{g=g.currentTarget.dataset.storageType;var h;"ls"===
g?h=UaDb$$module$static$js$services$uadb.read(k):"idb"===g&&(h=await idbMgr$$module$static$js$services$idb_mgr.read(k));h=h??"";k="string"===typeof h?h:JSON.stringify(h,null,2);wnds$$module$static$js$app_ui.wpre.show(k,!1)}})})},elencoDocs$$module$static$js$app_ui=()=>{var a=DocsMgr$$module$static$js$services$docs_mgr.names();const b=UaJtfh$$module$static$js$services$uajtfh();b.append('<div class="docs-dialog">');b.append("<h4>Elenco Documenti</h4>");0<a.length?(b.append('\n      <table class="table-data">\n        <thead>\n          <tr>\n            <th>Nome</th>\n            <th>Azioni</th>\n          </tr>\n        </thead>\n        <tbody>\n    '),
a.forEach((c,d)=>{b.append(`
<tr>
<td>${c}</td>
<td><button class="link-show-doc btn-success" data-doc-index="${d}">Visualizza</button></td>
<td><button class="delete-doc-btn btn-danger" data-doc-index="${d}">Elimina</button></td>
</tr>
`)}),b.append("</tbody></table>")):b.append("<p>Nessun documento trovato.</p>");b.append("</div>");wnds$$module$static$js$app_ui.winfo.show(b.html());a=wnds$$module$static$js$app_ui.winfo.w.getElement();a.querySelectorAll(".link-show-doc").forEach(c=>{c.addEventListener("click",d=>{d.preventDefault();d=d.currentTarget.dataset.docIndex;null!==d&&(d=parseInt(d,10),d=DocsMgr$$module$static$js$services$docs_mgr.doc(d),wnds$$module$static$js$app_ui.wpre.show(d,!1))})});a.querySelectorAll(".delete-doc-btn").forEach(c=>
{c.addEventListener("click",async d=>{d.preventDefault();d=d.currentTarget.dataset.docIndex;null!==d&&(d=parseInt(d,10),d=DocsMgr$$module$static$js$services$docs_mgr.name(d),await confirm(`Confermi la cancellazione del documento "${d}"?`)&&(DocsMgr$$module$static$js$services$docs_mgr.delete(d),elencoDocs$$module$static$js$app_ui()))})})},elencoKnBase$$module$static$js$app_ui=async()=>{var a=await idbMgr$$module$static$js$services$idb_mgr.selectKeys(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE_PRE);
const b=UaJtfh$$module$static$js$services$uajtfh();b.append('<div class="knbase-dialog">');b.append("<h4>Gestione Base di conoscenza</h4>");if(0<Object.keys(a).length){b.append('<table class="table-data">');b.append("<thead><tr><th>Nome</th><th>Azioni</th></tr></thead>");b.append("<tbody>");for(const e of a)b.append(`
  <tr> 
  <td>${e}</td>
  <td><button class="btn-load-item btn-success" data-item-name="${e}">Carica</button></td>
  <td><button class="btn-delete-item btn-danger" data-item-name="${e}">Elimina</button></td>
  </tr>
  `);b.append("</tbody></table>")}else b.append("<p>Nessuna Base di conoscenza trovata.</p>");b.append("</div>");wnds$$module$static$js$app_ui.winfo.show(b.html());a=wnds$$module$static$js$app_ui.winfo.w.getElement();const c=async e=>{e=e.currentTarget.dataset.itemName;const f=await idbMgr$$module$static$js$services$idb_mgr.read(e);await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE,f);e=e.slice(DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE_PRE.length);
alert(`Base di conoscenza ${e} caricata`)},d=async e=>{(e=e.currentTarget.dataset.itemName)&&await confirm(`Confermi Eliminazione : ${e}`)&&(await idbMgr$$module$static$js$services$idb_mgr.delete(e),wnds$$module$static$js$app_ui.winfo.close(),elencoKnBase$$module$static$js$app_ui())};a.querySelectorAll(".btn-load-item").forEach(e=>e.addEventListener("click",c));a.querySelectorAll(".btn-delete-item").forEach(e=>e.addEventListener("click",d))},elencoContext$$module$static$js$app_ui=async()=>{var a=
await idbMgr$$module$static$js$services$idb_mgr.selectKeys(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT_PRE);const b=UaJtfh$$module$static$js$services$uajtfh();b.append('<div class="context-dialog">');b.append("<h4>Gestione Contesti</h4>");if(0<Object.keys(a).length){b.append('<table class="table-data">');b.append("<thead><tr><th>Nome</th><th>Azioni</th></tr></thead>");b.append("<tbody>");for(const e of a)b.append(`
<tr>
<td>${e}</td>
<td><button class="btn-load-item btn-success" data-item-name="${e}">Carica</button></td>
<td><button class="btn-delete-item btn-danger" data-item-name="${e}">Elimina</button></td>
</tr>
  `);b.append("</tbody></table>")}else b.append("<p>Nessun Contesto trovato.</p>");b.append("</div>");wnds$$module$static$js$app_ui.winfo.show(b.html());a=wnds$$module$static$js$app_ui.winfo.w.getElement();const c=async e=>{e=e.currentTarget.dataset.itemName;const f=await idbMgr$$module$static$js$services$idb_mgr.read(e);await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT,f);e=e.slice(DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT_PRE.length);
alert(`Contesto ${e} caricatao`)},d=async e=>{(e=e.currentTarget.dataset.itemName)&&await confirm(`Confermi Eliminazione del contesto: ${e}`)&&(await idbMgr$$module$static$js$services$idb_mgr.delete(e),wnds$$module$static$js$app_ui.winfo.close(),elencoContext$$module$static$js$app_ui())};a.querySelectorAll(".btn-load-item").forEach(e=>e.addEventListener("click",c));a.querySelectorAll(".btn-delete-item").forEach(e=>e.addEventListener("click",d))},elencoThreads$$module$static$js$app_ui=async()=>{var a=
await idbMgr$$module$static$js$services$idb_mgr.selectKeys(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD_PRE);const b=UaJtfh$$module$static$js$services$uajtfh();b.append('<div class="thread-dialog">');b.append("<h4>Gestione Conversazioni Archiviate</h4>");if(0<a.length){b.append('<table class="table-data">');b.append("<thead><tr><th>Nome</th><th>Azioni</th></tr></thead>");b.append("<tbody>");for(const e of a)b.append(`
<tr>
  <td>${e}</td>
  <td><button class="btn-load-item btn-success" data-item-name="${e}">Carica</button></td>
  <td><button class="btn-delete-item btn-danger" data-item-name="${e}">Elimina</button></td>
</tr>
      `);b.append("</tbody></table>")}else b.append("<p>Nessuna conversazione archiviata trovata.</p>");b.append("</div>");wnds$$module$static$js$app_ui.winfo.show(b.html());a=wnds$$module$static$js$app_ui.winfo.w.getElement();const c=async e=>{e=e.currentTarget.dataset.itemName;const f=await idbMgr$$module$static$js$services$idb_mgr.read(e);await idbMgr$$module$static$js$services$idb_mgr.create(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD,f);e=e.slice(DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD_PRE.length);
alert(`Conversazione '${e}' caricata come corrente.`);showHtmlThread$$module$static$js$app_ui();wnds$$module$static$js$app_ui.winfo.close()},d=async e=>{(e=e.currentTarget.dataset.itemName)&&await confirm(`Confermi l'eliminazione della conversazione: ${e}?`)&&(await idbMgr$$module$static$js$services$idb_mgr.delete(e),wnds$$module$static$js$app_ui.winfo.close(),elencoThreads$$module$static$js$app_ui())};a.querySelectorAll(".btn-load-item").forEach(e=>e.addEventListener("click",c));a.querySelectorAll(".btn-delete-item").forEach(e=>
e.addEventListener("click",d))},calcQuery$$module$static$js$app_ui=()=>{var a=[];let b=0;a.push("Documento Num.Parti");a.push("==================");const c=DocsMgr$$module$static$js$services$docs_mgr.names();for(let e=0;e<c.length;e++){const f=c[e];var d=DocsMgr$$module$static$js$services$docs_mgr.doc(e).length;d=Math.ceil(d/AppMgr$$module$static$js$app_mgr.promptSize);b+=d;a.push(`${f}&nbsp;&nbsp;&nbsp;[${d}]`)}a.push("==================");a.push(`Totale num. Parti: ${b}`);a=a.join("\n");wnds$$module$static$js$app_ui.wpre.show(a)},
deleteAllData$$module$static$js$app_ui=async()=>{const a=UaJtfh$$module$static$js$services$uajtfh(),b=[DATA_KEYS$$module$static$js$services$data_keys.KEY_KNBASE,DATA_KEYS$$module$static$js$services$data_keys.KEY_CONTEXT,DATA_KEYS$$module$static$js$services$data_keys.KEY_THREAD];var c=[DATA_KEYS$$module$static$js$services$data_keys.KEY_RESPONSE,DATA_KEYS$$module$static$js$services$data_keys.KEY_QUERY,DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS];a.append('<div class="delete-dialog">');a.append("<h4>Seleziona Dati da Cancellare</h4>");
a.append('<table class="table-data">');a.append("<tr><td colspan=2><b>Dati Correnti:</b></td></tr>");c.forEach(e=>{a.append(`
<tr>
  <td><input type="checkbox" data-key="${e}" data-storage="ls"> ${e}</td>
  <td>${getDescriptionForKey$$module$static$js$app_ui(e)}</td>
</tr>`)});b.forEach(e=>{a.append(`
<tr>
<td><input type="checkbox" data-key="${e}" data-storage="idb"> ${e} </td>
<td>${getDescriptionForKey$$module$static$js$app_ui(e)}</td>
</tr>`)});c=(await idbMgr$$module$static$js$services$idb_mgr.getAllKeys()).filter(e=>!b.includes(e));0<c.length&&(a.append("<tr><td colspan=2><b>Dati Archiviati:</b></td></tr>"),c.forEach(e=>{a.append(`
<tr>
<td><input type="checkbox" data-key="${e}" data-storage="idb"> ${e}</td>
<td>${getDescriptionForKey$$module$static$js$app_ui(e)}</td>
</tr>`)}));a.append("</table>");a.append('<div class="delete-actions">');a.append('<button id="delete-selected-btn" class="btn-delete-selected">Cancella Selezionati</button>');a.append('<button id="delete-all-btn" class="btn-delete-all">Cancella Tutto</button>');a.append("</div>");a.append("</div>");console.info(a.html());wnds$$module$static$js$app_ui.winfo.show(a.html());const d=wnds$$module$static$js$app_ui.winfo.w.getElement();d.querySelector("#delete-selected-btn").addEventListener("click",async()=>
{var e=[],f=[];d.querySelectorAll('input[type="checkbox"]:checked').forEach(g=>{const k=g.dataset.storage;g=g.dataset.key;"ls"===k?e.push(g):"idb"===k&&f.push(g)});if(0===e.length&&0===f.length)alert("Nessun elemento selezionato.");else if(await confirm("Confermi la cancellazione degli elementi selezionati?")){for(const g of e)g==DATA_KEYS$$module$static$js$services$data_keys.KEY_DOCS?DocsMgr$$module$static$js$services$docs_mgr.deleteAll():UaDb$$module$static$js$services$uadb.delete(g);for(const g of f)await idbMgr$$module$static$js$services$idb_mgr.delete(g);
await alert("Dati selezionati cancellati con successo.");wnds$$module$static$js$app_ui.winfo.close()}});d.querySelector("#delete-all-btn").addEventListener("click",async()=>{await confirm("ATTENZIONE: Stai per cancellare TUTTI i dati gestiti dall'applicazione (LocalStorage e IndexedDB). Confermi?")&&(Object.values(DATA_KEYS$$module$static$js$services$data_keys).forEach(e=>UaDb$$module$static$js$services$uadb.delete(e)),await idbMgr$$module$static$js$services$idb_mgr.clearAll(),alert("Tutti i dati dell'applicazione sono stati cancellati."),
wnds$$module$static$js$app_ui.winfo.close())})},showEsempiDocs$$module$static$js$app_ui=async()=>{const a=await requestGet$$module$static$js$services$http_request("./data/help_test.html");wnds$$module$static$js$app_ui.winfo.show(a);wnds$$module$static$js$app_ui.winfo.w.getElement().querySelectorAll(".doc-esempio").forEach(b=>{b.addEventListener("click",async c=>{c.preventDefault();if(c=c.currentTarget.dataset.exampleName){var d=`data/${c}`;c=await requestGet$$module$static$js$services$http_request(d);
c=cleanDoc$$module$static$js$text_cleaner(c);d=d.split("/");d=d[d.length-1];DocsMgr$$module$static$js$services$docs_mgr.exists(d)?alert(`Il documento ${d} \u00e8 gi\u00e0 caricato`):(DocsMgr$$module$static$js$services$docs_mgr.add(d,c),wnds$$module$static$js$app_ui.winfo.close())}})})};
function bindEventListener$$module$static$js$app_ui(){document.getElementById("btn-help").addEventListener("click",Commands$$module$static$js$app_ui.help);document.getElementById("btn-upload").addEventListener("click",Commands$$module$static$js$app_ui.upload);document.getElementById("id_log").addEventListener("click",Commands$$module$static$js$app_ui.log);document.getElementById("btn-provider-settings").addEventListener("click",Commands$$module$static$js$app_ui.providerSettings);document.getElementById("btn-doctype-settings").addEventListener("click",
Commands$$module$static$js$app_ui.docTypeSettings);document.getElementById("btn-dark-theme").addEventListener("click",()=>setTheme$$module$static$js$app_ui("dark"));document.getElementById("btn-light-theme").addEventListener("click",()=>setTheme$$module$static$js$app_ui("light"));document.getElementById("menu-readme").addEventListener("click",showReadme$$module$static$js$app_ui);document.getElementById("menu-quickstart").addEventListener("click",showQuickstart$$module$static$js$app_ui);document.getElementById("menu-show-config").addEventListener("click",
LlmProvider$$module$static$js$llm_provider.showConfig);document.getElementById("menu-show-knbase").addEventListener("click",showKnBase$$module$static$js$app_ui);document.getElementById("menu-save-knbase").addEventListener("click",saveKnBase$$module$static$js$app_ui);document.getElementById("menu-show-query").addEventListener("click",showQuery$$module$static$js$app_ui);document.getElementById("show-menu-contextresponse").addEventListener("click",showContextResponse$$module$static$js$app_ui);document.getElementById("menu-show-thread").addEventListener("click",
showThread$$module$static$js$app_ui);document.getElementById("menu-show-contesto").addEventListener("click",showContesto$$module$static$js$app_ui);document.getElementById("menu-save-contesto").addEventListener("click",saveContesto$$module$static$js$app_ui);document.getElementById("menu-elenco-dati").addEventListener("click",elencoDati$$module$static$js$app_ui);document.getElementById("menu-elenco-docs").addEventListener("click",elencoDocs$$module$static$js$app_ui);document.getElementById("menu-elenco-context").addEventListener("click",
elencoContext$$module$static$js$app_ui);document.getElementById("menu-elenco-knbase").addEventListener("click",elencoKnBase$$module$static$js$app_ui);document.getElementById("menu-save-thread").addEventListener("click",saveThread$$module$static$js$app_ui);document.getElementById("menu-elenco-threads").addEventListener("click",elencoThreads$$module$static$js$app_ui);document.getElementById("menu-calc-query").addEventListener("click",calcQuery$$module$static$js$app_ui);document.getElementById("menu-delete-all").addEventListener("click",
deleteAllData$$module$static$js$app_ui);document.getElementById("menu-help-esempi").addEventListener("click",showEsempiDocs$$module$static$js$app_ui);document.querySelector(".text-input").addEventListener("keydown",b=>TextInput$$module$static$js$app_ui.handleEnter(b));document.querySelector(".send0-input").addEventListener("click",()=>TextInput$$module$static$js$app_ui.send0());document.querySelector(".send1-input").addEventListener("click",()=>TextInput$$module$static$js$app_ui.send1());document.querySelector(".send2-input").addEventListener("click",
()=>TextInput$$module$static$js$app_ui.send2());document.querySelector(".clear-input").addEventListener("click",()=>TextInput$$module$static$js$app_ui.clear());document.querySelector(".copy-output").addEventListener("click",()=>TextOutput$$module$static$js$app_ui.copy());document.querySelector(".wnd-output").addEventListener("click",()=>TextOutput$$module$static$js$app_ui.openWnd());document.querySelector(".clear-history").addEventListener("click",()=>TextOutput$$module$static$js$app_ui.clearHistory());
const a=document.querySelector("#id-menu-btn");a.addEventListener("change",()=>{document.querySelector("body").classList.toggle("menu-open",a.checked);const b=document.querySelector("body"),c=document.querySelector("#id-menu-btn");b.classList.contains("menu-open")?c.setAttribute("data-tt","Close"):c.setAttribute("data-tt","Open")})}var module$static$js$app_ui={Commands:Commands$$module$static$js$app_ui,TextInput:TextInput$$module$static$js$app_ui,TextOutput:TextOutput$$module$static$js$app_ui};
module$static$js$app_ui.bindEventListener=bindEventListener$$module$static$js$app_ui;module$static$js$app_ui.getTheme=getTheme$$module$static$js$app_ui;module$static$js$app_ui.showHtmlThread=showHtmlThread$$module$static$js$app_ui;module$static$js$app_ui.wnds=wnds$$module$static$js$app_ui;const DialogManager$$module$static$js$services$uadialog={escapeHtml(a){return a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")},createDialog(a,b,c=""){const d=document.createElement("div"),e=document.createElement("div");d.className=`${a}-dialog`;d.classList.add("inv");e.className="overlay";c="prompt"===a?`<input type="text" class="prompt-input" value="${this.escapeHtml(c)}">`:"";b=this.escapeHtml(b);d.innerHTML=`
      <div role="${"alert"===a?"alertdialog":"dialog"}" aria-labelledby="dialog-title" aria-describedby="dialog-message">
        <h4 id="dialog-title">${b}</h4>
        ${c}
        <div class="buttons">
          <button class="ok" aria-label="OK">OK</button>
          ${"confirm"===a||"prompt"===a?'<button class="cancel" aria-label="Annulla">Annulla</button>':""}
        </div>
      </div>`;d.setAttribute("role","dialog");d.setAttribute("aria-modal","true");[d,e].forEach(f=>{f.classList.add("show");document.body.appendChild(f)});return{dialog:d,overlay:e}},closeDialog(a,b){[a,b].forEach(c=>{c.classList.remove("show");setTimeout(()=>c.remove(),300)})},async showDialog(a,b,c){return new Promise(d=>{var e=document.querySelector(".overlay.show");if(e){const n=document.querySelector(".dialog.show");this.closeDialog(n,e)}const {dialog:f,overlay:g}=this.createDialog(a,b,c),k=
f.querySelector(".ok");e=f.querySelector(".cancel");const h=n=>{this.closeDialog(f,g);d(n);document.removeEventListener("keydown",m);g.removeEventListener("click",l)},m=n=>{"Escape"===n.key&&h("confirm"===a?!1:null)},l=()=>{h("confirm"===a?!1:null)};document.addEventListener("keydown",m);g.addEventListener("click",l);if("prompt"===a){const n=f.querySelector(".prompt-input");n.focus();n.select();k.onclick=()=>{h(n.value)};e.onclick=()=>{h(null)};n.addEventListener("keydown",p=>{"Enter"===p.key&&k.click()})}else"confirm"===
a?(k.onclick=()=>{h(!0)},e.onclick=()=>{h(!1)}):(k.onclick=()=>{h(void 0)},g.onclick=()=>{h(void 0)})})}},nativeAlert$$module$static$js$services$uadialog=window.alert,nativeConfirm$$module$static$js$services$uadialog=window.confirm,nativePrompt$$module$static$js$services$uadialog=window.prompt;window.alert=async function(a){a instanceof Error&&(a=a.message);return DialogManager$$module$static$js$services$uadialog.showDialog("alert",a)};
window.confirm=async function(a){return DialogManager$$module$static$js$services$uadialog.showDialog("confirm",a)};window.prompt=async function(a,b=""){return DialogManager$$module$static$js$services$uadialog.showDialog("prompt",a,b)};var module$static$js$services$uadialog={DialogManager:DialogManager$$module$static$js$services$uadialog};const VERSIONE$$module$static$js$app=" 0.1.5";console.log("*** VERSIONE:",VERSIONE$$module$static$js$app);
async function openApp$$module$static$js$app(){try{wnds$$module$static$js$app_ui.init();Commands$$module$static$js$app_ui.init();UaLog$$module$static$js$services$ualog3.setXY(40,6).setZ(111).new();AppMgr$$module$static$js$app_mgr.initApp();TextInput$$module$static$js$app_ui.init();TextOutput$$module$static$js$app_ui.init();bindEventListener$$module$static$js$app_ui();document.querySelector(".menu-btn").checked=!1;await showHtmlThread$$module$static$js$app_ui();getTheme$$module$static$js$app_ui();
const a=WebId$$module$static$js$services$webuser_id.get();FirebaseLogger$$module$static$js$services$firbaselogger.sendLog("open",a)}catch(a){console.error("Si \u00e8 verificato un errore durante l'inizializzazione dell'app:",a)}}window.addEventListener("load",openApp$$module$static$js$app);var module$static$js$app={};const HuggingFaceAdapter$$module$static$js$adapter$adapter_huggingface={buildUrl:a=>"https://router.huggingface.co/v1/chat/completions",buildHeaders:a=>({"Content-Type":"application/json",Authorization:`Bearer ${a}`}),adaptPayload:a=>{a={model:a.model,messages:a.messages,temperature:a.temperature,max_tokens:a.max_tokens,top_p:a.top_p,top_k:a.top_k,stop:a.stop};for(const b in a)void 0===a[b]&&delete a[b];return a},parseResponse:a=>{try{return a.choices[0].message.content}catch(b){return null}}};
var module$static$js$adapter$adapter_huggingface={HuggingFaceAdapter:HuggingFaceAdapter$$module$static$js$adapter$adapter_huggingface};
